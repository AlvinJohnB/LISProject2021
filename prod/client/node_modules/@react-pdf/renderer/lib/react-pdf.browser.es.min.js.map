{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/utils/propsEqual.js","../src/index.js","../src/renderer.js","../src/dom/usePDF.js","../src/dom/PDFViewer.js","../src/dom/BlobProvider.js","../src/dom/PDFDownloadLink.js","../src/dom/index.js"],"sourcesContent":["/* eslint-disable no-continue */\n\n/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i += 1) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render' && !a[propName] !== !b[propName]) {\n      return false;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","import BlobStream from 'blob-stream';\nimport FontStore from '@react-pdf/font';\nimport renderPDF from '@react-pdf/render';\nimport PDFDocument from '@react-pdf/pdfkit';\nimport layoutDocument from '@react-pdf/layout';\n\nimport createRenderer from './renderer';\nimport { version } from '../package.json';\n\nconst fontStore = new FontStore();\n\n// We must keep a single renderer instance, otherwise React will complain\nlet renderer;\n\n// The pdf instance acts as an event emitter for DOM usage.\n// We only want to trigger an update when PDF content changes\nconst events = {};\n\nconst pdf = initialValue => {\n  const onChange = () => {\n    const listeners = events.change?.slice() || [];\n    for (let i = 0; i < listeners.length; i += 1) listeners[i]();\n  };\n\n  const container = { type: 'ROOT', document: null };\n  renderer = renderer || createRenderer({ onChange });\n  const mountNode = renderer.createContainer(container);\n\n  const updateContainer = doc => {\n    renderer.updateContainer(doc, mountNode, null);\n  };\n\n  if (initialValue) updateContainer(initialValue);\n\n  const render = async (compress = true) => {\n    const props = container.document.props || {};\n    const { pdfVersion, language } = props;\n\n    const ctx = new PDFDocument({\n      compress,\n      pdfVersion,\n      lang: language,\n      displayTitle: true,\n      autoFirstPage: false,\n    });\n\n    const layout = await layoutDocument(container.document, fontStore);\n\n    return renderPDF(ctx, layout);\n  };\n\n  const callOnRender = (params = {}) => {\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  };\n\n  const toBlob = async () => {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  };\n\n  const toBuffer = async () => {\n    callOnRender();\n    return render();\n  };\n\n  const toString = async () => {\n    let result = '';\n    const instance = await render(false); // For some reason, when rendering to string if compress=true the document is blank\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', buffer => {\n          result += buffer;\n        });\n\n        instance.on('end', () => {\n          callOnRender();\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  const on = (event, listener) => {\n    if (!events[event]) events[event] = [];\n    events[event].push(listener);\n  };\n\n  const removeListener = (event, listener) => {\n    if (!events[event]) return;\n    const idx = events[event].indexOf(listener);\n    if (idx > -1) events[event].splice(idx, 1);\n  };\n\n  return {\n    on,\n    container,\n    toBlob,\n    toBuffer,\n    toString,\n    removeListener,\n    updateContainer,\n  };\n};\n\nconst Font = fontStore;\n\nconst StyleSheet = {\n  create: s => s,\n};\n\nexport { version, Font, StyleSheet, pdf, createRenderer };\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = ({ onChange = () => {} }) => {\n  return ReactFiberReconciler({\n    schedulePassiveEffects,\n\n    cancelPassiveEffects,\n\n    supportsMutation: true,\n\n    isPrimaryRenderer: false,\n\n    warnsIfNotActing: false,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    clearContainer() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit: onChange,\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.type === 'ROOT') {\n        parentInstance.document = child;\n      } else {\n        parentInstance.children.push(child);\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children?.indexOf(beforeChild);\n\n      if (index === undefined) return;\n\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children?.indexOf(child);\n\n      if (index === undefined) return;\n\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children?.indexOf(child);\n\n      if (index === undefined) return;\n\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n    },\n  });\n};\n\nexport default createRenderer;\n","/* eslint-disable no-console */\n\nimport queue from 'queue';\nimport { useState, useRef, useEffect } from 'react';\n\nimport { pdf } from '../index';\n\nexport const usePDF = ({ document }) => {\n  const pdfInstance = useRef(null);\n\n  const [state, setState] = useState({\n    url: null,\n    blob: null,\n    error: null,\n    loading: false,\n  });\n\n  // Setup rendering queue\n  useEffect(() => {\n    const renderQueue = queue({ autostart: true, concurrency: 1 });\n\n    const queueDocumentRender = () => {\n      setState(prev => ({ ...prev, loading: true }));\n\n      renderQueue.splice(0, renderQueue.length, () =>\n        state.error ? Promise.resolve() : pdfInstance.current.toBlob(),\n      );\n    };\n\n    const onRenderFailed = error => {\n      console.error(error);\n      setState(prev => ({ ...prev, error }));\n    };\n\n    const onRenderSuccessful = blob => {\n      setState({\n        blob,\n        error: null,\n        loading: false,\n        url: URL.createObjectURL(blob),\n      });\n    };\n\n    pdfInstance.current = pdf();\n    pdfInstance.current.on('change', queueDocumentRender);\n    pdfInstance.current.updateContainer(document);\n\n    renderQueue.on('error', onRenderFailed);\n    renderQueue.on('success', onRenderSuccessful);\n\n    return () => {\n      renderQueue.end();\n      pdfInstance.current.removeListener('change', queueDocumentRender);\n    };\n  }, []);\n\n  // Revoke old unused url instances\n  useEffect(() => {\n    return () => {\n      if (state.url) {\n        URL.revokeObjectURL(state.url);\n      }\n    };\n  }, [state.url]);\n\n  const update = () => {\n    pdfInstance.current.updateContainer(document);\n  };\n\n  return [state, update];\n};\n\nexport default usePDF;\n","/* eslint-disable no-console */\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect } from 'react';\n\nimport usePDF from './usePDF';\n\nexport const PDFViewer = ({\n  title,\n  style,\n  className,\n  children,\n  innerRef,\n  showToolbar = true,\n  ...props\n}) => {\n  const [instance, updateInstance] = usePDF({ document: children });\n\n  useEffect(updateInstance, [children]);\n\n  const src = instance.url\n    ? `${instance.url}#toolbar=${showToolbar ? 1 : 0}`\n    : null;\n\n  return (\n    <iframe\n      src={src}\n      title={title}\n      ref={innerRef}\n      style={style}\n      className={className}\n      {...props}\n    />\n  );\n};\n\nexport default PDFViewer;\n","/* eslint-disable no-console */\n\nimport { useEffect } from 'react';\n\nimport usePDF from './usePDF';\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  const [instance, updateInstance] = usePDF({ document: doc });\n\n  useEffect(updateInstance, [doc]);\n\n  if (!doc) {\n    console.warn('You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return children(instance);\n};\n\nexport default BlobProvider;\n","/* eslint-disable no-console */\n\nimport React, { useEffect } from 'react';\n\nimport usePDF from './usePDF';\n\nexport const PDFDownloadLink = ({\n  style,\n  children,\n  className,\n  document: doc,\n  fileName = 'document.pdf',\n}) => {\n  const [instance, updateInstance] = usePDF({ document: doc });\n\n  useEffect(updateInstance, [children]);\n\n  if (!doc) {\n    console.warn('You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const handleDownloadIE = () => {\n    if (window.navigator.msSaveBlob) {\n      // IE\n      window.navigator.msSaveBlob(instance.blob, fileName);\n    }\n  };\n\n  return (\n    <a\n      style={style}\n      href={instance.url}\n      download={fileName}\n      className={className}\n      onClick={handleDownloadIE}\n    >\n      {typeof children === 'function' ? children(instance) : children}\n    </a>\n  );\n};\n\nexport default PDFDownloadLink;\n","import * as primitives from '@react-pdf/primitives';\n\nimport usePDF from './usePDF';\nimport PDFViewer from './PDFViewer';\nimport BlobProvider from './BlobProvider';\nimport PDFDownloadLink from './PDFDownloadLink';\nimport { pdf, version, Font, StyleSheet } from '../index';\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a Node specific API. You're either using this method in a browser, or your bundler is not loading react-pdf from the appropriate web build.`,\n  );\n};\n\nexport const renderToStream = () => {\n  throwEnvironmentError('renderToStream');\n};\n\nexport const renderToString = () => {\n  throwEnvironmentError('renderToString');\n};\n\nexport const renderToFile = () => {\n  throwEnvironmentError('renderToFile');\n};\n\nexport const render = () => {\n  throwEnvironmentError('render');\n};\n\nexport * from '../index';\n\nexport * from './usePDF';\n\nexport * from './PDFViewer';\n\nexport * from './BlobProvider';\n\nexport * from './PDFDownloadLink';\n\nexport * from '@react-pdf/primitives';\n\nexport default {\n  pdf,\n  usePDF,\n  Font,\n  version,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToString,\n  renderToFile,\n  render,\n  ...primitives,\n};\n"],"names":["renderer","emptyObject","createRenderer","onChange","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","isPrimaryRenderer","warnsIfNotActing","appendInitialChild","parentInstance","child","children","push","createInstance","type","style","box","props","createTextInstance","text","rootContainerInstance","value","finalizeInitialChildren","element","getPublicInstance","instance","prepareForCommit","clearContainer","prepareUpdate","oldProps","newProps","propsEqual","a","b","oldPropsKeys","Object","keys","newPropsKeys","length","i","propName","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","document","insertBefore","beforeChild","index","_parentInstance$child","indexOf","undefined","splice","removeChild","_parentInstance$child2","removeChildFromContainer","_parentInstance$child3","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","fontStore","FontStore","events","pdf","initialValue","container","mountNode","listeners","change","slice","createContainer","updateContainer","doc","render","compress","pdfVersion","language","ctx","PDFDocument","lang","displayTitle","autoFirstPage","layoutDocument","layout","renderPDF","callOnRender","params","onRender","on","event","listener","toBlob","stream","pipe","BlobStream","Promise","resolve","reject","blob","error","toBuffer","toString","result","buffer","removeListener","idx","Font","StyleSheet","create","s","usePDF","pdfInstance","useRef","useState","url","loading","state","setState","useEffect","renderQueue","queue","autostart","concurrency","queueDocumentRender","prev","current","console","URL","createObjectURL","end","revokeObjectURL","PDFViewer","title","className","innerRef","showToolbar","updateInstance","src","React","ref","BlobProvider","warn","PDFDownloadLink","fileName","href","download","onClick","window","navigator","msSaveBlob","throwEnvironmentError","name","Error","renderToStream","renderToString","renderToFile","version","primitives"],"mappings":"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"}