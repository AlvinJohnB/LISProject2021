{"version":3,"file":"index.browser.js","sources":["../src/font.js","../src/standard.js","../src/index.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nconst resolveFontWeight = value => {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    const { postscriptName } = this.options;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(\n        Buffer.from(this.src.split(',')[1], 'base64'),\n        postscriptName,\n      );\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data, postscriptName);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, postscriptName, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    const numericFontWeight = resolveFontWeight(fontWeight);\n\n    this.sources.push(\n      new FontSource(src, this.family, fontStyle, numericFontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources\n      .filter(s => s.fontWeight < fontWeight)\n      .sort(sortByFontWeight);\n    const gt = styleSources\n      .filter(s => s.fontWeight > fontWeight)\n      .sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.family}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"],"names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","fetchFont","src","options","fetch","response","buffer","arrayBuffer","constructor","name","Buffer","from","isDataUrl","dataUrl","header","split","hasDataPrefix","substring","hasBase64Prefix","resolveFontWeight","value","sortByFontWeight","a","b","fontWeight","FontSource","fontFamily","fontStyle","data","loading","load","postscriptName","fontkit","create","headers","body","method","Promise","resolve","reject","open","err","Font","family","sources","register","numericFontWeight","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","sort","gt","Error","FontStore","fonts","emojiSource","hyphenationCallback","font","i","registerEmojiSource","url","format","registerHyphenationCallback","callback","getFont","isStandard","standard","includes","f","reset","keys","Object","key","clear","getRegisteredFonts","getEmojiSource","getHyphenationCallback","getRegisteredFontFamilies"],"mappings":"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"}