{"version":3,"sources":["fonts/arialbd.ttf","fonts/arial.ttf","helpers/AuthContext.js","images/stcamlogo.jpg","components/Header.js","components/NotLoggedInModal.js","images/loading.gif","components/LoadingModal.js","components/ptregistration/Ptreg.js","components/ptsearch/Ptsearch.js","components/ptsearch/Searchresult.js","components/ptsearch/Noptrecord.js","components/updatept/Updatept.js","components/addorder/Testrow.js","components/addorder/Testsrow.js","components/addorder/Addordermodal.js","components/addorder/Addorder.js","components/users/UserLogin.js","components/users/UserReg.js","components/orders/Ordersrow.js","components/orders/Orders.js","components/results/ResultForm.js","components/results/ResultFormA4.js","components/orders/Selectsize.js","components/orders/DetailTr.js","components/orders/OrderDetails.js","components/laboratory/LabNav.js","components/laboratory/checkin/CheckInTr.js","components/LabLoadingModal.js","components/laboratory/checkin/CheckInModal.js","components/laboratory/LabClient.js","components/laboratory/chemistry/ChemTr.js","components/laboratory/chemistry/ChemTest.js","components/laboratory/chemistry/PrevTr.js","components/laboratory/chemistry/PrevResultModal.js","components/laboratory/chemistry/ChemResultmodal.js","components/laboratory/chemistry/ChemForm.js","components/laboratory/hema/Hemaform.js","components/results/Results.js","components/orders/PrevTrxTr.js","components/orders/PrevTrx.js","components/laboratory/cm/CmForm.js","components/laboratory/sero/Seroform.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthContext","createContext","stcamlogo","Header","history","useHistory","_useContext","useContext","setAuthState","authState","useEffect","axios","get","headers","accessToken","localStorage","getItem","then","response","data","error","prevAuthState","Object","objectSpread","status","name","username","id","react_default","a","createElement","src","logo","alt","width","className","onClick","removeItem","push","NotLoggedInModal","type","value","loading","LoadingModal","style","marginRight","Ptreg","_useState","useState","_useState2","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","patientLastId","setPatientLastId","_useState5","_useState6","patientAge","setPatientAge","components_LoadingModal","ptId","concat","initialValues","branchid","lastname","firstname","middlename","gender","bday","age","phone","address","idenno","validationSchema","Yup","shape","required","onSubmit","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","alert","stop","_x","apply","this","arguments","components_NotLoggedInModal","formik_esm","htmlFor","component","disabled","autoComplete","placeholder","as","onBlur","e","bdayArray","target","split","year","Date","getFullYear","month","getMonth","day","getDate","agey","agem","aged","Ptsearch","Ptsearch_regeneratorRuntime","length","console","log","lname","fname","Searchresult","resultData","setResultData","param","useParams","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","onSelect","pId","displayOrders","slice","map","key","react_paginate_default","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","react_router_dom","to","Noptrecord","Updatept","updatePtData","setUpdatePtData","hasPrev","setHasPrev","Testrow","setTests","test","tests","setCmTests","cmTests","chemTests","setChemTests","hemaTests","setHemaTests","seroTests","setSeroTests","microTests","setMicroTests","testname","section","testToRemove","testcode","filter","Testsrow","setTestsList","testlist","close","testSelected","duplicate","notDuplicate","i","toConsumableArray","index","Addordermodal","props","show","onChange","tr","document","querySelector","getElementsByTagName","toUpperCase","td","innerHTML","innerText","indexOf","display","colSpan","addorder_Testsrow","Addorder","testData","setTestData","setShow","_useState7","_useState8","_useState9","_useState10","labTestInput","setLabTestInput","_useState11","_useState12","ptData","setPtData","_useState13","_useState14","labNumberInput","setLabNumberInput","_useState15","_useState16","lastOrderIdData","setLastOrderIdData","_useState17","_useState18","_useState19","_useState20","hemaTestsInput","setHemaTestsInput","_useState21","_useState22","_useState23","_useState24","cmTestsInput","setCmTestsInput","_useState25","_useState26","_useState27","_useState28","chemTestsInput","setChemTestsInput","_useState29","_useState30","_useState31","_useState32","seroTestsInput","setSeroTestsInput","_useState33","_useState34","_useState35","_useState36","microTestsInput","setMicroTestsInput","reducedTests","reduce","acc","curr","reducedChemTests","reducedCmTests","reducedSeroTests","reducedHemaTests","reducedMicroTests","submitHandler","concatLabNo","Addorder_regeneratorRuntime","labNumber","forPtId","testsRequested","forOrderID","sectNumber","OrderId","PatientlistId","reqDr","ptType","hidden","addorder_Testrow","addorder_Addordermodal","UserLogin","setUsername","password","setPassword","msg","setMsg","event","setItem","UserReg","Ordersrow","order","Patientlists","Moment","createdAt","format","Orders","orders","setOrders","orders_Ordersrow","_ref2","Orders_regeneratorRuntime","Font","register","family","arialbd","fontStyle","fontWeight","arial","styles","StyleSheet","create","page","paddingTop","paddingBottom","paddingHorizontal","alignItems","header","height","companyHeader","companyHText","fontSize","textAlign","contactText","marginTop","patientHeader","flex","flexDirection","paddingLeft","pcol","pcol1","patientInfoText","resultBody","resultHeader","fontFamily","footer","justifyContent","position","bottom","footerCol","footerCol1","footerText","footerMessage","resTable","resHText","borderBottom","borderTop","padding","testNameHeader","tableHeader","resTr","body","testName","trCenter","trCenterBold","left","signature","signaturePatho","ResultForm","react_pdf_browser_es","size","orientation","fixed","Sectionorders","Sectionresults","result","Testslist","isPackage","unit","Referencevalue","Male","Female","releasedBy","pathologist","marginBottom","ResultFormA4","Selectsize","sectionserve","results_ResultForm","fileName","detail","blob","url","results_ResultFormA4","DetailTr","modalShow","setModalShow","onGenerate","orders_Selectsize","OrderDetails","orderDetails","setOrderDetails","onOrderDelete","OrderDetails_regeneratorRuntime","orders_DetailTr","LabNav","checkInTr","details","setOrderID","LabLoadingModal","CheckInModal","components_LabLoadingModal","onAccept","CheckInModal_regeneratorRuntime","_callee8","etests","expTests","_context8","pop","setTimeout","_i","_callee2","_i2","_context2","_callee3","_i3","_context3","_callee4","_i4","_context4","_callee5","_i5","_context5","_callee6","_i6","_context6","_callee7","_i7","_context7","setCheckInDetails","closeModal","LabClient","checkInDetails","setSection","orderid","encodedBy","updatedAt","updatedBy","Orderlist","orderselected","setSelected","CheckInTr","LabClient_regeneratorRuntime","components_Header","laboratory_LabNav","checkin_CheckInModal","showModal","ChemTr","setPrevResultData","setResultFormData","setSectionResultArray","selectHandler","ChemTr_regeneratorRuntime","ChemTest","ptdata","saveResult","ChemTest_regeneratorRuntime","sResultID","catch","err","isQuali","options","option","PrevTr","prevResultData","PrevResultModal","showPrevResModal","setShowPrevResModal","displayPrevResults","chemistry_PrevTr","ChemResultmodal","setSectionData","resultFormData","sectionResultArray","patholist","setPatho","pathoSelected","setPathoSelected","onRelease","ChemResultmodal_regeneratorRuntime","sectOrderID","undoCheckIn","_ref3","onUndoRelease","_ref4","chemistry_PrevResultModal","chemistry_ChemTest","patho","ChemForm","sectionData","ChemForm_regeneratorRuntime","chemistry_ChemTr","chemistry_ChemResultmodal","Hemaform","Hemaform_regeneratorRuntime","Results","Results_regeneratorRuntime","PrevTrxTr","labNo","PrevTrx","orders_PrevTrxTr","Cmform","CmForm_regeneratorRuntime","Seroform_regeneratorRuntime","App","Provider","react_router","path","exact","Seroform","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.a8ccda34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arialbd.858f5a50.ttf\";","module.exports = __webpack_public_path__ + \"static/media/arial.fa3228aa.ttf\";","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(\"\");","export default __webpack_public_path__ + \"static/media/stcamlogo.b4793c8f.jpg\";","import React, { useEffect } from 'react'\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../helpers/AuthContext';\r\nimport './ptregistration/ptreg.css'\r\nimport logo from '../images/stcamlogo.jpg'\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nfunction Header() {\r\n  let history = useHistory();\r\n    const {setAuthState, authState} = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n      axios.get(\"http://localhost:3001/auth/auth\",{\r\n        headers:{\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        }\r\n      }).then((response) => {\r\n        if(response.data.error){\r\n          setAuthState(prevAuthState => {\r\n            return { ...prevAuthState, status: false}\r\n          })\r\n        }else{\r\n          setAuthState(() => {\r\n            return { name: response.data.name, username: response.data.username, id: response.data.id, status: true}\r\n          })\r\n        }\r\n    })\r\n    },[setAuthState])\r\n\r\n    const logOut = () => {\r\n      localStorage.removeItem(\"accessToken\")\r\n      setAuthState({...authState, status: false});\r\n      history.push('/login');\r\n    }\r\n    return (\r\n      <header>\r\n        <div><img src={logo} alt=\"Logo\" width=\"75px\" /><br />St. Camillus de Lellis General Hospital</div>\r\n        <div className=\"userDiv\">\r\n        {authState.status === true && <p>Welcome, {authState.name}. <p className=\"logOut\" onClick={logOut}>Log-out?</p></p>}\r\n        {authState.status === false && <p>Welcome! Please log-in!</p>}</div>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport '../components/laboratory/checkin/checkinmodal.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../helpers/AuthContext';\r\n \r\nfunction NotLoggedInModal() {\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n    \r\n    if(authState.status === true){\r\n        return null\r\n\r\n    }else{\r\n        return (\r\n            <div className=\"checkin-modal\">\r\n                <div className=\"login-modal-wrapper\">\r\n                    <div className=\"login-modal-header\">\r\n                        <div><strong>&nbsp;</strong></div>\r\n                    </div>\r\n                        <div className=\"checkin-modal-body\">\r\n                           <strong>You are not logged-in!</strong><br />\r\n                           <p className=\"tablefooter\">Please press the button to go to log-in window.</p>\r\n                        </div>\r\n                    <div className=\"checkin-modal-footer\">\r\n                            <input type=\"button\" className=\"checkin-btn reject\" value=\"Log-in\" onClick={()=>{history.push('/login')}} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default NotLoggedInModal\r\n","export default __webpack_public_path__ + \"static/media/loading.d3fbaf2b.gif\";","import React from 'react'\r\nimport '../components/laboratory/checkin/checkinmodal.css'\r\nimport loading from '../images/loading.gif'\r\n\r\nfunction LoadingModal() {\r\n\r\n    return (\r\n        <div className=\"loading-modal\">\r\n            <div className=\"login-modal-wrapper\">\r\n                <div className=\"loading-modal-header\">\r\n                    <div><strong>&nbsp;</strong></div>\r\n                </div>\r\n                    <div className=\"loading-modal-body\">\r\n                        <img src={loading} alt=\"loading\" width=\"auto\"  style={{marginRight: \"10px\"}}/>\r\n                       <strong>Loading please wait...</strong><br />\r\n                    </div>\r\n                <div className=\"checkin-modal-footer\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LoadingModal\r\n","import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NotLoggedInModal from '../NotLoggedInModal';\r\n\r\nimport './ptreg.css';\r\nimport LoadingModal from '../LoadingModal';\r\n\r\nconst Ptreg = () => {\r\n    let history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [patientLastId, setPatientLastId] = useState(0);\r\n    const [patientAge, setPatientAge] = useState(0);\r\n\r\n    useEffect( () => {\r\n      axios.get(\"http://localhost:3001/patient\").then((response) => {\r\n        setPatientLastId(response.data)\r\n      });\r\n    }, []);\r\n\r\n    if(isLoading === true){\r\n        return (\r\n            <LoadingModal />\r\n        )\r\n    }\r\n    \r\n    const branch = \"CAMILLUS-\";\r\n    let ptId = `${branch}${patientLastId.id+1}`;\r\n\r\n    let getAge = (e) => {\r\n\r\n        var birthday = e.target.value;\r\n        var bdayArray = birthday.split(\"-\");\r\n\r\n\r\n        var year = new Date().getFullYear();\r\n        var month = new Date().getMonth()+1;\r\n        var day = new Date().getDate();\r\n\r\n        var agey = year - bdayArray[0];\r\n        var agem = month - bdayArray[1];\r\n        var aged = day - bdayArray[2];\r\n\r\n        if(agem < 0){\r\n            agey = agey -1\r\n            agem = agem + 12\r\n        }\r\n\r\n        if(aged<0){\r\n            agem = agem-1\r\n            aged = aged+31\r\n        }\r\n        setPatientAge(agey);\r\n        initialValues.age = agey;\r\n        initialValues.branchid = ptId;\r\n    }\r\n\r\n    \r\n    const initialValues = {\r\n        branchid: ptId,\r\n        lastname: \"\",\r\n        firstname: \"\",\r\n        middlename: \"\",\r\n        gender:\"\",\r\n        bday: \"\",\r\n        age: patientAge,\r\n        phone: \"\",\r\n        address:\"\",\r\n        idenno:\"\"\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n\r\n        branchid: Yup.string(),\r\n        lastname: Yup.string().required(\"This field is required!\"),\r\n        firstname: Yup.string().required(\"This field is required!\"),\r\n        middlename: Yup.string(),\r\n        bday: Yup.string().required(\"This field is required!\"),\r\n        age: Yup.number().required(),\r\n        gender: Yup.string().required(\"This field is required!\"),\r\n        phone: Yup.string().required(\"This field is required!\"),\r\n        address: Yup.string().required(\"This field is required!\"),\r\n        idenno: Yup.string(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true);\r\n        await axios.get(\"http://localhost:3001/patient\").then((response) => {\r\n            setPatientLastId(response.data)\r\n            const branch = \"CAMILLUS-\";\r\n            data.branchid = `${branch}${response.data.id+1}`;\r\n          });\r\n\r\n        data.age = patientAge;\r\n\r\n        axios.post(\"http://localhost:3001/patient/addpatient\", data,\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in. Please log-in!\");\r\n                history.push('/login');\r\n            }else{\r\n                history.push(`/addorder/for${ptId}`);\r\n            }\r\n        })\r\n    }\r\n    return (\r\n    <div className=\"ptregwrapper\">\r\n        <NotLoggedInModal />\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                <Form>\r\n\r\n                <h1>Patient Registration</h1>\r\n                <hr />\r\n                <h4>Personal Information</h4>\r\n                <div className=\"form-group\">\r\n                    <div className=\"form-content\">\r\n                       <label htmlFor=\"branchid\" className=\"form-content\">Patient ID:</label>\r\n                       <ErrorMessage name=\"branchid\" component=\"span\" /> \r\n                       <Field \r\n                            name=\"branchid\"\r\n                            id=\"form-field\"\r\n                            type=\"text\"\r\n                            value={ptId}\r\n                            disabled={true}\r\n                       />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                \r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"lastname\">Lastname:</label> \r\n                        <Field \r\n                            autoComplete=\"off\"\r\n                            id=\"form-field\"\r\n                            name=\"lastname\"\r\n                            placeholder=\"Lastname\"\r\n                        /><br />\r\n                        <ErrorMessage name=\"lastname\" component=\"span\" />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"firstname\">First name:</label>\r\n                        <Field \r\n                            autoComplete=\"off\"\r\n                            id=\"form-field\"\r\n                            name=\"firstname\"\r\n                            placeholder=\"First name\"\r\n                        /><br />\r\n                        <ErrorMessage name=\"firstname\" component=\"span\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"middlename\">Middle name:</label>\r\n                        <Field \r\n                            autoComplete=\"off\"\r\n                            id=\"form-field\"\r\n                            name=\"middlename\"\r\n                            placeholder=\"Middle name\"\r\n                        /><br />\r\n                         <ErrorMessage name=\"middlename\" component=\"span\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"gender\">Gender:</label>\r\n                        <Field id=\"form-field\" as=\"select\" name=\"gender\">\r\n                            <option  value=\"invalid\">Select gender</option>\r\n                            <option  value=\"Male\">Male</option>\r\n                            <option  value=\"Female\">Female</option>\r\n                        </Field><br />\r\n                        <ErrorMessage name=\"gender\" component=\"span\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"bday\">Birthdate:</label>\r\n                        <Field \r\n                        autoComplete=\"off\"\r\n                        id=\"form-field\"\r\n                        type=\"date\"\r\n                        onBlur={getAge}\r\n                        name=\"bday\" /><br />\r\n                        <ErrorMessage name=\"bday\" component=\"span\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" name=\"age\">Age:</label>\r\n                        <Field id=\"form-field\" name=\"age\" type=\"number\" value={patientAge} disabled={true}/>\r\n                    </div>\r\n                </div>\r\n                <br /><h4>Contact and other information</h4>\r\n                    <div className=\"form-group\">\r\n\r\n                        <div className=\"form-content addressdiv\">\r\n                        <label className=\"form-content\" htmlFor=\"address\">Address:</label>\r\n                        <Field \r\n                            autoComplete=\"off\"\r\n                            name=\"address\"\r\n                            id=\"form-field\"\r\n                            type=\"text\"\r\n                            placeholder=\"Address\"\r\n                        /><br />\r\n                         <ErrorMessage name=\"address\" component=\"span\" />\r\n                        </div>\r\n                        <div className=\"form-content\">\r\n                            <label className=\"form-content\" htmlFor=\"phone\">Phone Number:</label>\r\n                            <Field \r\n                                autoComplete=\"off\"\r\n                                id=\"form-field\"\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                placeholder=\"Phone number\"\r\n                            /><br />\r\n                             <ErrorMessage name=\"phone\" component=\"span\" />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"idenno\">Identification Card No. (SC, PWD, etc.)</label>\r\n                        <Field \r\n                            autoComplete=\"off\"\r\n                            id=\"form-field\"\r\n                            name=\"idenno\"\r\n                            placeholder=\"ID Number\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className=\"form-content form-botton\" type=\"submit\">Submit</button>\r\n\r\n                </Form>\r\n            </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ptreg;\r\n","import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory, } from 'react-router-dom';\r\nimport NotLoggedInModal from '../NotLoggedInModal';\r\nimport '../ptregistration/ptreg.css';\r\n\r\nconst Ptsearch = () => {\r\n\r\n  const history = useHistory();\r\n  const initialValues ={\r\n    lastname: \"\",\r\n    firstname:\"\"\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    lastname: Yup.string().required(\"This field is required!\"),\r\n    firstname: Yup.string()\r\n  })\r\n\r\n  const onSubmit = async (data) => {\r\n\r\n    await axios.post('http://localhost:3001/patient/findpatient', data).then((response) => {\r\n    \r\n    if(response.data.length <= 0){\r\n      console.log(\"No patient found\");\r\n      history.push('/noptfound');\r\n\r\n    } else {\r\n      let lname = data.lastname\r\n      let fname = data.firstname\r\n      history.push(`/searchresults/${lname},${fname}`)\r\n    }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"ptregwrapper\">\r\n      <NotLoggedInModal />\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        <Form>\r\n          <h1>Patient Search</h1>\r\n          <hr />\r\n          <h4>Enter Patient Information:</h4>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-content\">\r\n              <label className=\"form-content\" htmlFor=\"lastname\">Lastname:</label>\r\n              <Field\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                id=\"form-field\"\r\n                placeholder=\"Enter last name\"\r\n              /><br />\r\n              <ErrorMessage name=\"lastname\" component=\"span\"/>\r\n            </div>\r\n            <div className=\"form-content\">\r\n              <label className=\"form-content\" htmlFor=\"firstname\">First name:</label>\r\n              <Field\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                id=\"form-field\"\r\n                placeholder=\"Enter first name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"form-content form-botton\" type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ptsearch;\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\nimport LoadingModal from '../LoadingModal';\r\n\r\nconst Searchresult = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [resultData, setResultData] = useState([])\r\n\r\n    let { param } = useParams();\r\n    let history = useHistory();\r\n    \r\n    useEffect(() => {\r\n\r\n    axios.get(`http://localhost:3001/patient/findpatient/${param}`).then((response) => {\r\n\r\n        setResultData(response.data);\r\n        setIsLoading(false);\r\n    })\r\n\r\n    },[param])\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 10;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(resultData.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n    \r\n    const onSelect = (e) => {\r\n        const pId = e.target.id\r\n        history.push(`/updatept/${pId}`)\r\n    }\r\n    const displayOrders = resultData.slice(pagesVisited, pagesVisited + orderPerPage).map((value) => {\r\n        return (<tr className=\"tbcontent\" key={value.id}>\r\n        <td onClick={onSelect} id={value.branchid}>{value.lastname}, {value.firstname} {value.middlename}</td>\r\n        <td onClick={onSelect} id={value.branchid}>{value.age}</td>\r\n        <td onClick={onSelect} id={value.branchid}>{value.gender}</td>\r\n        <td onClick={onSelect} id={value.branchid}>{value.bday}</td>\r\n    </tr>)\r\n    })\r\n\r\n \r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <LoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"ptregwrapper\">\r\n            <h3>Patient Search result/s:</h3>\r\n            <hr />\r\n            <div className=\"tablewrapper\">\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr className=\"header\">\r\n                        <td>Name</td>\r\n                        <td>Age</td>\r\n                        <td>Gender</td>\r\n                        <td>Birthday</td>\r\n                    </tr>\r\n                    {displayOrders}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n            {pageCount > 1 &&                     \r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"orders-pagination-bttns\"}\r\n                        previousLinkClassName={\"orders-prevBttn\"}\r\n                        nextLinkClassName={\"orders-nextbtn\"}\r\n                        disabledClassName={\"orders-pgnte-disabled\"}\r\n                        activeClassName={\"orders-pgninate-active\"}\r\n                    />}\r\n            <p className=\"tablefooter\"><Link to=\"/ptsearch\">Back to Patient Search</Link></p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchresult\r\n","import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory, } from 'react-router-dom';\r\n\r\nimport '../ptregistration/ptreg.css';\r\n\r\nconst Noptrecord = () => {\r\n\r\n  const history = useHistory();\r\n  const initialValues ={\r\n    lastname: \"\",\r\n    firstname:\"\"\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    lastname: Yup.string().required(\"This field is required!\"),\r\n    firstname: Yup.string()\r\n  })\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    axios.post('http://localhost:3001/patient/findpatient', data).then((response) => {\r\n    console.log(response.data.length);\r\n    if(response.data.length <= 0){\r\n      console.log(\"No patient found\");\r\n      history.push('/noptfound');\r\n\r\n    } else {\r\n      let lname = data.lastname\r\n      let fname = data.firstname\r\n      history.push(`/searchresults/${lname},${fname}`)\r\n    }\r\n    })\r\n\r\n  }\r\n  return (\r\n    <div className=\"ptregwrapper\">\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        <Form>\r\n          <h1>Patient Search</h1>\r\n          <hr />\r\n          <p className=\"error\">No patient record found.</p>\r\n          <h4>Enter Patient Information:</h4>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-content\">\r\n              <label className=\"form-content\" htmlFor=\"lastname\">Lastname:</label>\r\n              <Field\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                id=\"form-field\"\r\n                placeholder=\"Enter last name\"\r\n              />\r\n              <ErrorMessage name=\"lastname\" component=\"span\"/>\r\n            </div>\r\n\r\n            <div className=\"form-content\">\r\n              <label className=\"form-content\" htmlFor=\"firstname\">First name:</label>\r\n              <Field\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                id=\"form-field\"\r\n                placeholder=\"Enter first name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"form-content form-botton\" type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Noptrecord;\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport '../../components/ptregistration/ptreg.css'\r\nimport LoadingModal from '../LoadingModal';\r\n\r\nconst Updatept = () => {\r\n\r\n    const [updatePtData, setUpdatePtData] = useState({})\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [hasPrev, setHasPrev] = useState(false);\r\n    const history = useHistory();\r\n\r\n    let { pId } = useParams();\r\n    \r\n    useEffect(() => {\r\n\r\n    axios.get(`http://localhost:3001/patient/findpatientById/${pId}`).then((response) => {\r\n        setUpdatePtData(response.data);\r\n        setIsLoading(false);\r\n    })\r\n\r\n    axios.get(`http://localhost:3001/order/trx/prev/${pId}`).then((response) => {\r\n        if(response.data.length < 1){\r\n            setHasPrev(false);\r\n        }else{\r\n            setHasPrev(true);\r\n        }    \r\n    })\r\n\r\n    },[pId])\r\n    \r\n    const initialValues = {\r\n        branchid: updatePtData.branchid,\r\n        lastname: updatePtData.lastname,\r\n        firstname: updatePtData.firstname,\r\n        middlename: updatePtData.middlename,\r\n        gender:updatePtData.gender,\r\n        bday: updatePtData.bday,\r\n        age: updatePtData.age,\r\n        phone: updatePtData.phone,\r\n        address:updatePtData.address,\r\n        idenno:updatePtData.idenno\r\n    }\r\n\r\n    let getAge = (e) => {\r\n\r\n        var birthday = e.target.value;\r\n        var bdayArray = birthday.split(\"-\");\r\n\r\n\r\n        var year = new Date().getFullYear();\r\n        var month = new Date().getMonth()+1;\r\n        var day = new Date().getDate();\r\n\r\n        var agey = year - bdayArray[0];\r\n        var agem = month - bdayArray[1];\r\n        var aged = day - bdayArray[2];\r\n\r\n        if(agem < 0){\r\n            agey = agey -1\r\n            agem = agem + 12\r\n        }\r\n\r\n        if(aged<0){\r\n            agem = agem-1\r\n            aged = aged+31\r\n        }\r\n        setUpdatePtData({age: agey});\r\n\r\n    }\r\n    \r\n\r\n    const validationSchema = Yup.object().shape({\r\n\r\n        branchid: Yup.string(),\r\n        lastname: Yup.string().required(\"This field is required!\"),\r\n        firstname: Yup.string().required(\"This field is required!\"),\r\n        middlename: Yup.string(),\r\n        bday: Yup.string().required(\"This field is required!\"),\r\n        age: Yup.number().required(),\r\n        gender: Yup.string().required(\"This field is required!\"),\r\n        phone: Yup.string().required(\"This field is required!\"),\r\n        address: Yup.string().required(\"This field is required!\"),\r\n        idenno: Yup.string(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onPrevTrans = () => {\r\n        history.push(`/porders/${pId}`)\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true);\r\n        data.age = initialValues.age;\r\n        axios.post(\"http://localhost:3001/patient/updatept\", data,\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in, please log-in!\");\r\n                history.push(\"/login\");\r\n            }else{\r\n                history.push(`/addorder/for${pId}`);\r\n            }\r\n        })\r\n    }\r\n   \r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <LoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"ptregwrapper\">\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n\r\n            <h1>Update Patient Information</h1>\r\n            <hr />\r\n            <h4>Personal Information</h4>\r\n            <div className=\"form-group\">\r\n                <div className=\"form-content\">\r\n                   <label htmlFor=\"branchid\" className=\"form-content\">Patient ID:</label>\r\n                   <ErrorMessage name=\"branchid\" component=\"span\" /> \r\n\r\n                   <Field \r\n                        name=\"branchid\"\r\n                        id=\"form-field\"\r\n                        type=\"text\"\r\n                        value={initialValues.branchid}\r\n                        disabled={true}\r\n                   />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            \r\n                <div className=\"form-content\">\r\n                    <label className=\"form-content\" htmlFor=\"lastname\">Lastname:</label> \r\n                    <Field \r\n                        autoComplete=\"off\"\r\n                        id=\"form-field\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Lastname\"\r\n                    />\r\n                    <ErrorMessage name=\"lastname\" component=\"span\" />\r\n                    \r\n                </div>\r\n\r\n                <div className=\"form-content\">\r\n                    <label className=\"form-content\" htmlFor=\"firstname\">First name:</label>\r\n                    <Field \r\n                        autoComplete=\"off\"\r\n                        id=\"form-field\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"First name\"\r\n                    />\r\n                    <ErrorMessage name=\"firstname\" component=\"span\" />\r\n                </div>\r\n\r\n                <div className=\"form-content\">\r\n                    <label className=\"form-content\" htmlFor=\"middlename\">Middle name:</label>\r\n                    <Field \r\n                        autoComplete=\"off\"\r\n                        id=\"form-field\"\r\n                        name=\"middlename\"\r\n                        placeholder=\"Middle name\"\r\n                    />\r\n                     <ErrorMessage name=\"middlename\" component=\"span\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n\r\n                <div className=\"form-content\">\r\n                    <label className=\"form-content\" htmlFor=\"gender\">Gender:</label>\r\n                    <Field id=\"form-field\" as=\"select\" name=\"gender\">\r\n                        <option  value=\"invalid\">Select gender</option>\r\n                        <option  value=\"Male\">Male</option>\r\n                        <option  value=\"Female\">Female</option>\r\n                    </Field><br />\r\n                    <ErrorMessage name=\"gender\" component=\"span\" />\r\n                </div>\r\n\r\n                <div className=\"form-content\">\r\n                    <label className=\"form-content\" htmlFor=\"bday\">Birthdate:</label>\r\n                    <Field \r\n                    id=\"form-field\"\r\n                    type=\"date\"\r\n                    onBlur={getAge}\r\n                    name=\"bday\" />\r\n                    <ErrorMessage name=\"bday\" component=\"span\" />\r\n                </div>\r\n\r\n                <div className=\"form-content\">\r\n                    <label className=\"form-content\" name=\"age\">Age:</label>\r\n                    <Field id=\"form-field\" name=\"age\" type=\"number\" value={updatePtData.age} disabled={true} />\r\n                </div>\r\n            </div>\r\n            <br /><h4>Contact and other information</h4>\r\n                <div className=\"form-group\">\r\n\r\n                    <div className=\"form-content addressdiv\">\r\n                    <label className=\"form-content\" htmlFor=\"address\">Address:</label>\r\n                    <Field \r\n                        autoComplete=\"off\"\r\n                        name=\"address\"\r\n                        id=\"form-field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                    />\r\n                     <ErrorMessage name=\"address\" component=\"span\" />\r\n                    </div>\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"phone\">Phone Number:</label>\r\n                        <Field \r\n                            autoComplete=\"off\"\r\n                            id=\"form-field\"\r\n                            name=\"phone\"\r\n                            type=\"tel\"\r\n                            placeholder=\"Phone number\"\r\n                        />\r\n                         <ErrorMessage name=\"phone\" component=\"span\" />\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"form-content\">\r\n                    <label className=\"form-content\" htmlFor=\"idenno\">Identification Card No. (SC, PWD, etc.)</label>\r\n                    <Field \r\n                        autoComplete=\"off\"\r\n                        id=\"form-field\"\r\n                        name=\"idenno\"\r\n                        placeholder=\"ID Number\"\r\n                    />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button className=\"form-content form-botton widthauto\" type=\"submit\">Update / Proceed</button>\r\n                    {hasPrev === true && <button className=\"form-content form-botton widthauto filter\" onClick={onPrevTrans} type=\"button\">Show Previous Transactions</button>}\r\n                </div>\r\n                \r\n\r\n            </Form>\r\n        </Formik>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Updatept\r\n","import React from 'react'\r\n\r\nimport './modal.css'\r\nconst Testrow = ({setTests, test, tests, setCmTests, cmTests, chemTests, setChemTests, hemaTests, setHemaTests, seroTests, setSeroTests, microTests, setMicroTests}) => {\r\n\r\n    const removeHandler = () => {\r\n        \r\n        \r\n        // Check what section\r\n        let section = test.section;\r\n        let testToRemove = test.testcode;\r\n\r\n        if(section === \"CM\"){\r\n            setCmTests(cmTests.filter((test) => test.testcode !== testToRemove));\r\n        }\r\n        if(section === \"Chemistry\"){\r\n            setChemTests(chemTests.filter((test) => test.testcode !== testToRemove));\r\n        }\r\n        if(section === \"Hematology\"){\r\n            setHemaTests(hemaTests.filter((test) => test.testcode !== testToRemove));\r\n        }\r\n        if(section === \"Serology\"){\r\n            setSeroTests(seroTests.filter((test) => test.testcode !== testToRemove));\r\n        }\r\n        if(section === \"Micro\"){\r\n            setMicroTests(microTests.filter((test) => test.testcode !== testToRemove));\r\n        }\r\n\r\n        setTests(tests.filter((test) => test.testcode !== testToRemove));\r\n\r\n    }\r\n\r\n    return (\r\n        <tr className=\"tbcontentremove\">\r\n            <td>{test.testname}</td>\r\n            <td onClick={removeHandler}>Remove</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Testrow\r\n","import React from 'react'\r\n\r\nimport './modal.css'\r\n\r\nconst Testsrow = ({setTestsList, setHemaTests, setCmTests, setSeroTests, setMicroTests, testcode, testname, test, testlist, close, cmTests, microTests, hemaTests, chemTests, seroTests, setChemTests }) => {\r\n\r\n    const handleClick = () => {\r\n        let testSelected = test;\r\n\r\n        // Check for duplicate\r\n        let duplicate = false;\r\n        let notDuplicate = true;\r\n\r\n        let key = testlist.length;\r\n\r\n        if(testlist.length >= 1){\r\n            for(let i = 0; i < testlist.length; i++){\r\n                let test = testlist[i].testname;\r\n                if(testSelected.testname === test){\r\n                    duplicate = true;\r\n                } else {\r\n                    notDuplicate = true;\r\n                }\r\n            }\r\n        }\r\n        if(duplicate){\r\n            alert(\"Duplicate test detected, please recheck.\");\r\n            close();\r\n        } else if(notDuplicate){\r\n            // Check what section\r\n            let section = testSelected.section;\r\n            if(section === \"Chemistry\"){\r\n                setChemTests([...chemTests, {testname: testSelected.testname, testcode: testSelected.testcode, section: testSelected.section}])\r\n            }else if(section === \"Hematology\"){\r\n                setHemaTests([...hemaTests, {testname: testSelected.testname, testcode: testSelected.testcode, section: testSelected.section}])\r\n            }else if(section === \"CM\"){\r\n                setCmTests([...cmTests, {testname: testSelected.testname, testcode: testSelected.testcode, section: testSelected.section}])\r\n            }else if(section === \"Serology\"){\r\n                setSeroTests([...seroTests, {testname: testSelected.testname, testcode: testSelected.testcode, section: testSelected.section}])\r\n            }else if(section === \"Micro\"){\r\n                setMicroTests([...microTests, {testname: testSelected.testname, testcode: testSelected.testcode, section: testSelected.section}])\r\n            }\r\n            setTestsList([...testlist, {testname: testSelected.testname, testcode: testSelected.testcode, section: testSelected.section, index: key} ])\r\n            close();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr className=\"tbcontent\">\r\n            <td className=\"width-1\">{testcode}</td>\r\n            <td className=\"width-2\">{testname}</td>\r\n            <td className=\"width-1\" onClick={handleClick}>Select</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Testsrow\r\n","import React from 'react'\r\n\r\n\r\nimport './modal.css'\r\nimport Testsrow from './Testsrow';\r\n\r\nconst Addordermodal = (props) => {\r\n\r\n\r\n    if(!props.show){\r\n        return null\r\n    }\r\n\r\n    const testFilter = (e) => {\r\n        const table = document.querySelector(\"#teststable\");\r\n        const tr = table.getElementsByTagName(\"tr\");\r\n        let filter = e.target.value.toUpperCase();\r\n        \r\n\r\n        if(tr){\r\n            for(let i = 0; i < tr.length; i++){\r\n                let td = tr[i].getElementsByTagName(\"td\")[0]\r\n                if(td){\r\n                    let test = td.innerHTML || td.innerText\r\n                    if(test.indexOf(filter) > -1){\r\n                        tr[i].style.display = \"\";\r\n                    }else{\r\n                        tr[i].style.display = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className =\"modal\">\r\n            <div className=\"modal-wrapper\">\r\n                <div className=\"modal-header\">\r\n                    <div><strong>Search Tests:</strong>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"tablewrapper\">\r\n                    <input className=\"form-input\" autoComplete=\"off\" id=\"myInput\" type=\"text\" name=\"searchInput\" placeholder=\"Type testcode...\" onChange={testFilter}/>\r\n                        <table className=\"testtable\">\r\n                        <tbody>\r\n                            <tr className=\"tableheader\">\r\n                                <td className=\"width-1\">Test code</td>\r\n                                <td className=\"width-2\">Test name</td>\r\n                                <td className=\"width-1\">Action</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"3\">\r\n                                    <div className=\"tablebody\">\r\n                                        <table id=\"teststable\" className=\"tablecontent\">\r\n                                            <tbody>\r\n                                                {props.tests.map((test, key) => {\r\n                                                    return (\r\n                                                        <Testsrow \r\n                                                            key={key} \r\n                                                            testcode={test.testcode} \r\n                                                            testlist={props.testlist} \r\n                                                            setTestsList={props.setTestsList}\r\n                                                            testname={test.testname} \r\n                                                            test={test} \r\n                                                            close={props.close} \r\n                                                            hemaTests={props.hemaTests}\r\n                                                            setHemaTests={props.setHemaTests}\r\n                                                            cmTests={props.cmTests}\r\n                                                            setCmTests={props.setCmTests}\r\n                                                            chemTests={props.chemTests}\r\n                                                            seroTests={props.seroTests}\r\n                                                            setSeroTests={props.setSeroTests}\r\n                                                            microTests={props.microTests}\r\n                                                            setMicroTests={props.setMicroTests}\r\n                                                            setChemTests={props.setChemTests}\r\n                                                        />\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <input className=\"closeButton\" type=\"button\" value=\"Close\" onClick={props.close} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addordermodal\r\n","import React from 'react'\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport Testrow from './Testrow';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n\r\nimport Addordermodal from './Addordermodal'\r\nimport '../../components/ptregistration/ptreg.css'\r\nimport './modal.css'\r\nimport LoadingModal from '../LoadingModal';\r\n\r\n\r\nconst Addorder = () => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [testData, setTestData] = useState([])\r\n    const [show, setShow] = useState(false)\r\n    const [tests, setTests] = useState([])\r\n    const [labTestInput, setLabTestInput] = useState(\"\")\r\n    const [ptData, setPtData] = useState({})\r\n    const [labNumberInput, setLabNumberInput] = useState(\"\")\r\n    const [lastOrderIdData, setLastOrderIdData] = useState({})\r\n    \r\n    const [hemaTests, setHemaTests] = useState([])\r\n    const [hemaTestsInput, setHemaTestsInput] = useState(\"\")\r\n    const [cmTests, setCmTests] = useState([])\r\n    const [cmTestsInput, setCmTestsInput] = useState(\"\")\r\n    const [chemTests, setChemTests] = useState([])\r\n    const [chemTestsInput, setChemTestsInput] = useState(\"\")\r\n    const [seroTests, setSeroTests] = useState([])\r\n    const [seroTestsInput, setSeroTestsInput] = useState(\"\")\r\n    const [microTests, setMicroTests] = useState([])\r\n    const [microTestsInput, setMicroTestsInput] = useState(\"\")\r\n\r\n    let { pId } = useParams();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:3001/test\").then((response) => {\r\n            setTestData(response.data);\r\n        })\r\n\r\n        axios.get(\"http://localhost:3001/order\").then((response) => {\r\n            setLastOrderIdData(response.data);\r\n\r\n        })\r\n\r\n        axios.get(`http://localhost:3001/patient/findpatientById/${pId}`).then((response) => {\r\n            setPtData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n\r\n    }, [pId])\r\n\r\n    useEffect(() => {\r\n            const reducedTests = tests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n            setLabTestInput(reducedTests);\r\n\r\n            const reducedChemTests = chemTests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n            setChemTestsInput(reducedChemTests);  \r\n            \r\n            const reducedCmTests = cmTests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n            setCmTestsInput(reducedCmTests);\r\n            \r\n            const reducedSeroTests = seroTests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n            setSeroTestsInput(reducedSeroTests);\r\n            \r\n            const reducedHemaTests = hemaTests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n            setHemaTestsInput(reducedHemaTests);\r\n            \r\n            const reducedMicroTests = microTests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n            setMicroTestsInput(reducedMicroTests);  \r\n\r\n    }, [tests, chemTests, cmTests, seroTests, microTests, hemaTests])\r\n\r\n\r\n\r\n    const submitHandler = () => {\r\n        // Reduce array for test input\r\n        const reducedTests = tests.reduce((acc, curr) => `${acc}${curr.testcode} `, '');\r\n        setLabTestInput(reducedTests);\r\n\r\n        //Set Lab No \r\n        let year = new Date().getFullYear();\r\n        let month = new Date().getMonth();\r\n\r\n        const branchcode = \"CAM\";\r\n        let id = lastOrderIdData.id+1;\r\n\r\n        let concatLabNo = `${branchcode}-${year}-${month+1}-${id}`\r\n        setLabNumberInput(concatLabNo);\r\n    \r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n     if(labTestInput.length === 0){\r\n         alert(\"Please add test!\")\r\n     }else{\r\n\r\n        await axios.get(\"http://localhost:3001/order\").then((response) => {\r\n            setLastOrderIdData(response.data);\r\n            //Set Lab No \r\n            let year = new Date().getFullYear();\r\n            let month = new Date().getMonth();\r\n\r\n            const branchcode = \"CAM\";\r\n            let id = lastOrderIdData.id+1;\r\n\r\n            let concatLabNo = `${branchcode}-${year}-${month+1}-${id}`\r\n            data.labNumber = concatLabNo;\r\n        })\r\n\r\n        setIsLoading(true);\r\n        data.forPtId = ptData.id;\r\n        data.testsRequested = labTestInput;\r\n\r\n        //Check if sections are null\r\n\r\n        axios.post(\"http://localhost:3001/order/addorder\", data,\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert('You are not logged in, please log-in!');\r\n                history.push('/login');\r\n            }else{\r\n\r\n                if(cmTestsInput){\r\n                    axios.post(\"http://localhost:3001/order/addsord\",\r\n                        {\r\n                            section: \"CM\",\r\n                            tests: cmTestsInput,\r\n                            forOrderID: lastOrderIdData.id+1,\r\n                            sectNumber: `(CM)-${labNumberInput}`\r\n                        },\r\n                    {\r\n                        headers: {\r\n                            accessToken: localStorage.getItem(\"accessToken\")\r\n                        }\r\n                    }).then((response) => {\r\n                        if(response.data.error){\r\n                            alert('You are not logged in, please log-in!');\r\n                            history.push('/login');\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n                if(chemTestsInput){\r\n                    axios.post(\"http://localhost:3001/order/addsord\",\r\n                    {\r\n                        section: \"Chemistry\",\r\n                        tests: chemTestsInput,\r\n                        forOrderID: lastOrderIdData.id+1,\r\n                        sectNumber: `(CHEM)-${labNumberInput}`\r\n                    },\r\n                {\r\n                    headers: {\r\n                        accessToken: localStorage.getItem(\"accessToken\")\r\n                    }\r\n                }).then((response) => {\r\n                    if(response.data.error){\r\n                        alert('You are not logged in, please log-in!');\r\n                        history.push('/login');\r\n                    }\r\n                })\r\n                }\r\n\r\n\r\n                if(hemaTestsInput){\r\n                    axios.post(\"http://localhost:3001/order/addsord\",\r\n                    {\r\n                        section: \"Hematology\",\r\n                        tests: hemaTestsInput,\r\n                        forOrderID: lastOrderIdData.id+1,\r\n                        sectNumber: `(HEMA)-${labNumberInput}`\r\n                    },\r\n                {\r\n                    headers: {\r\n                        accessToken: localStorage.getItem(\"accessToken\")\r\n                    }\r\n                }).then((response) => {\r\n                    if(response.data.error){\r\n                        alert('You are not logged in, please log-in!');\r\n                        history.push('/login');\r\n                    }\r\n                })\r\n                }\r\n\r\n\r\n                if(seroTestsInput){\r\n                    axios.post(\"http://localhost:3001/order/addsord\",\r\n                    {\r\n                        section: \"Serology\",\r\n                        tests: seroTestsInput,\r\n                        forOrderID: lastOrderIdData.id+1,\r\n                        sectNumber: `(SERO)-${labNumberInput}`\r\n                    },\r\n                {\r\n                    headers: {\r\n                        accessToken: localStorage.getItem(\"accessToken\")\r\n                    }\r\n                }).then((response) => {\r\n                    if(response.data.error){\r\n                        alert('You are not logged in, please log-in!');\r\n                        history.push('/login');\r\n                    }\r\n                })\r\n                }\r\n\r\n\r\n                if(microTestsInput){\r\n                    axios.post(\"http://localhost:3001/order/addsord\",\r\n                    {\r\n                        section: \"Micro\",\r\n                        tests: microTestsInput,\r\n                        forOrderID: lastOrderIdData.id+1,\r\n                        sectNumber: `(MICRO)-${labNumberInput}`\r\n                    },\r\n                {\r\n                    headers: {\r\n                        accessToken: localStorage.getItem(\"accessToken\")\r\n                    }\r\n                }).then((response) => {\r\n                    if(response.data.error){\r\n                        alert('You are not logged in, please log-in!');\r\n                        history.push('/login');\r\n                    }\r\n                })\r\n                }\r\n\r\n\r\n                axios.post(\"http://localhost:3001/order/cnxtion\",\r\n                    {\r\n                        OrderId: lastOrderIdData.id+1,\r\n                        PatientlistId: ptData.id\r\n                    },\r\n                {\r\n                    headers: {\r\n                        accessToken: localStorage.getItem(\"accessToken\")\r\n                    }\r\n                }).then((response) => {\r\n                    if(response.data.error){\r\n                        alert('You are not logged in, please log-in!');\r\n                        history.push('/login');\r\n                    }\r\n                })\r\n\r\n                history.push('/')\r\n            \r\n            }\r\n        })\r\n     }\r\n    }\r\n\r\n    const showModal = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const closeModal= () => {\r\n        submitHandler();\r\n        setShow(false);\r\n    }\r\n\r\n\r\n    const initialValues = {\r\n        forPtId: ptData.branchid,\r\n        reqDr:\"\",\r\n        testsRequested:labTestInput,\r\n        labNumber: \"\",\r\n        ptType: \"\",\r\n    }\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n\r\n        forPtId: Yup.string(),\r\n        reqDr: Yup.string().required(\"This field is required! Put N/A if none\"),\r\n        ptType: Yup.string().required(\"This field is required!\"),\r\n        testsRequested: Yup.string(),\r\n        labNumber: Yup.string(),\r\n\r\n    })\r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"ptregwrapper\">\r\n                <LoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n         <div className=\"ptregwrapper\">\r\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                <Form>\r\n                    <h1>Add Patient Order</h1>\r\n                    <hr />\r\n                    <h4>Patient Information Information</h4>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-content\">\r\n                        <label className=\"form-content\">Patient ID:</label>\r\n                        <input type=\"text\" id=\"form-field\" value={ptData.branchid} disabled={true} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                \r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"lastname\">Lastname:</label> \r\n\r\n                        <input type=\"text\" id=\"form-field\" value={ptData.lastname} disabled />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"firstname\">First name:</label>\r\n                        \r\n                    <input type=\"text\" id=\"form-field\" value={ptData.firstname} disabled/>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"middlename\">Middle name:</label>\r\n                        \r\n                        <input type=\"text\" id=\"form-field\" value={ptData.middlename} disabled />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" htmlFor=\"gender\">Gender:</label>\r\n                        <input type=\"text\" id=\"form-field\" value={ptData.gender} disabled/>\r\n                    </div>\r\n\r\n                    <div className=\"form-content\">\r\n                        <label className=\"form-content\" name=\"age\">Age:</label>\r\n                        \r\n                        <input type=\"text\" id=\"form-field\" value={ptData.age} disabled/>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <br /><h4>Request Information</h4>\r\n                    <div className=\"form-group\">\r\n\r\n                        <div className=\"form-content addressdiv\">\r\n                        <label className=\"form-content\" htmlFor=\"reqDr\">Requesting Physician:</label>\r\n                        <Field \r\n                            name=\"reqDr\"\r\n                            id=\"form-field\"\r\n                            type=\"text\"\r\n                            placeholder=\"Requesting Physician\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <ErrorMessage name=\"reqDr\" component=\"span\" />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-content addressdiv\">\r\n                        <label className=\"form-content\" htmlFor=\"reqDr\">Patient Type:</label>\r\n                        <Field \r\n                            name=\"ptType\"\r\n                            id=\"form-field\"\r\n                            type=\"text\"\r\n                            placeholder=\"OPD / Room No.\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <ErrorMessage name=\"ptType\" component=\"span\" />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-content\">\r\n                            <Field \r\n                                name=\"testsRequested\"\r\n                                id=\"form-field\"\r\n                                type=\"text\"\r\n                                placeholder=\"Test Requested\"\r\n                                hidden={true}\r\n                                value={labTestInput}\r\n                                disabled={false}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-content\">\r\n                            <Field \r\n                                name=\"labNumber\"\r\n                                id=\"form-field\"\r\n                                type=\"text\"\r\n                                placeholder=\"Lab No.\"\r\n                                hidden={true}\r\n                                disabled={false}\r\n                                value={labNumberInput}\r\n                            />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <br />\r\n                    <table className=\"table width50\">\r\n                        <tbody>\r\n                            <tr className=\"header\">\r\n                                <td>Requested Test/s</td>\r\n                                <td>Action</td>\r\n                            </tr>\r\n                            {tests.map((test) => {\r\n                                return (\r\n                                    <Testrow\r\n                                        setTests={setTests}\r\n                                        tests={tests}\r\n                                        key={test.index}\r\n                                        test={test}\r\n                                        submitHandler={submitHandler}\r\n                                        setLabTestInput={setLabTestInput}\r\n                                        setHemaTests={setHemaTests}\r\n                                        setCmTests={setCmTests}\r\n                                        setChemTests={setChemTests}\r\n                                        setSeroTests={setSeroTests}\r\n                                        setMicroTests={setMicroTests}\r\n                                        hemaTests={hemaTests}\r\n                                        cmTests={cmTests}\r\n                                        chemTests={chemTests}\r\n                                        seroTests={seroTests}\r\n                                        microTests={microTests}\r\n                                    />\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <td className=\"select\" onClick={showModal}>Click here to add test</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button className=\"form-content form-botton\" type=\"submit\">Submit</button>\r\n                    <Addordermodal \r\n                        show={show}\r\n                        tests={testData}\r\n                        close={closeModal}\r\n                        testlist={tests}\r\n                        setTestsList={setTests}\r\n                        hemaTests={hemaTests}\r\n                        setHemaTests={setHemaTests}\r\n                        cmTests={cmTests}\r\n                        setCmTests={setCmTests}\r\n                        chemTests={chemTests}\r\n                        seroTests={seroTests}\r\n                        setSeroTests={setSeroTests}\r\n                        microTests={microTests}\r\n                        setMicroTests={setMicroTests}\r\n                        setChemTests={setChemTests}\r\n                    />\r\n\r\n                </Form>\r\n            </Formik>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addorder\r\n","import React from 'react'\r\nimport { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../helpers/AuthContext';\r\n\r\nimport logo from '../../images/stcamlogo.jpg'\r\nimport './users.css'\r\n\r\nfunction UserLogin() {\r\n    let history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[msg, setMsg] = useState(\"\");\r\n    const {setAuthState} = useContext(AuthContext);\r\n\r\n    const onSubmit = () => {\r\n        const data = { username, password }\r\n        \r\n        axios.post(\"http://localhost:3001/auth/login\", data).then((response) => {\r\n\r\n            if(response.data.msg){\r\n                setMsg(response.data.msg);\r\n            }else{\r\n                localStorage.setItem(\"accessToken\", response.data);\r\n                setAuthState(prevAuthState => {\r\n                    return { ...prevAuthState, status: true}\r\n                  })\r\n                history.push('/');\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"login-form-wrapper\">\r\n            <div className=\"form-wrapper\">\r\n                <div className=\"login-form\">\r\n                    <img src={logo} alt=\"logo\" className=\"stcamlogo\"/>\r\n                    <h3>Laboratory Information System Login</h3>\r\n                    <form>\r\n                        \r\n                    <p className=\"errormsg\">{msg}</p>\r\n                        <label >Username:</label><br />\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"form-field\"\r\n                            placeholder=\"Username\"\r\n                            onChange={(event) => setUsername(event.target.value)}\r\n                        />\r\n                        <br />\r\n                        <label>Password:</label><br />\r\n                        <input \r\n                            type=\"password\" \r\n                            id=\"form-field\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(event) => setPassword(event.target.value)}\r\n                        />\r\n                        <br />\r\n                        <input onClick={onSubmit} className=\"login-form-botton\" type=\"button\" value=\"Login\" />\r\n                    </form>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserLogin\r\n","import React from 'react'\r\n\r\nimport './users.css'\r\n\r\nfunction UserReg() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            Register\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserReg\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'moment';\r\n\r\n\r\nfunction Ordersrow(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    const onSelect = () => {\r\n        history.push(`/order/${props.order.labNumber}`)\r\n\r\n    }\r\n    return (\r\n        <tr className=\"tbcontent order\">\r\n            <td>{props.order.labNumber}</td>\r\n            <td>{props.order.Patientlists[0].lastname}, {props.order.Patientlists[0].firstname} {props.order.Patientlists[0].middlename}</td>\r\n            <td>{props.order.testsRequested}</td>\r\n            <td>{Moment(props.order.createdAt).format('MMMM DD, yyyy')}</td>\r\n            <td onClick={onSelect}>Select</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Ordersrow\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport NotLoggedInModal from '../NotLoggedInModal'\r\nimport Ordersrow from './Ordersrow'\r\nimport ReactPaginate from 'react-paginate'\r\nimport '../../components/ptregistration/ptreg.css'\r\nimport LoadingModal from '../LoadingModal'\r\nimport { useState } from 'react'\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nfunction Orders() {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 10;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(orders.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayOrders = orders.slice(pagesVisited, pagesVisited + orderPerPage).map((order) => {\r\n        return (<Ordersrow key={order.id} order={order} />)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/getorders`).then((response) => {\r\n            setOrders(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[])\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true)\r\n\r\n        await axios.post(`http://localhost:3001/order/filter`, data).then((response) => {\r\n            if(response.data.length === 0){\r\n                alert('Lab number not found!')\r\n                setIsLoading(false);\r\n            }\r\n\r\n            if(response.data[0].status === \"DELETED\"){\r\n                alert(\"That lab number is deleted!\")\r\n            }else{\r\n                setOrders(response.data);\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"ptregwrapper\">\r\n                <LoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"labwrapper\">\r\n            <h1 className=\"labcontentheader-results\">&nbsp; Orders</h1>\r\n            <div className=\"labdiv\">\r\n                <div className=\"labdivcontent\">\r\n                <div className=\"form-content\">\r\n                    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                        <Form  className=\"margin-0\">\r\n                            <label className=\"form-content filter-label\">Search lab number:</label>\r\n                            <Field \r\n                                    name=\"labNumber\"\r\n                                    id=\"form-field\"\r\n                                    type=\"text\"\r\n                                    placeholder = \"Enter lab no...\"\r\n                                    className=\"margin-0\"\r\n                            />\r\n                            <button className=\"form-botton\" type=\"submit\">Search</button>\r\n                        </Form> \r\n                    </Formik>\r\n                </div>\r\n                <br />\r\n\r\n                    <table className=\"tablelab\" id=\"ordertable\">\r\n                        <tbody className=\"table-orders\">\r\n                            <tr className=\"header\">\r\n                                <th>Lab Number</th>\r\n                                <th>Patient Name</th>\r\n                                <th>Test/s Requested</th>\r\n                                <th>Date Encoded</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n                           {displayOrders}\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                    {pageCount > 1 &&                     \r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"orders-pagination-bttns\"}\r\n                        previousLinkClassName={\"orders-prevBttn\"}\r\n                        nextLinkClassName={\"orders-nextbtn\"}\r\n                        disabledClassName={\"orders-pgnte-disabled\"}\r\n                        activeClassName={\"orders-pgninate-active\"}\r\n                    />}\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <NotLoggedInModal /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","import React from 'react'\r\nimport { Page, Image, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';\r\nimport Moment from 'moment'\r\nimport arialbd from '../../fonts/arialbd.ttf'\r\nimport arial from '../../fonts/arial.ttf'\r\nimport logo from '../../images/stcamlogo.jpg'\r\nFont.register({ family: 'arialbd', src: arialbd, fontStyle: 'normal', fontWeight: 'bold' });\r\nFont.register({ family: 'arial', src: arial, fontStyle: 'normal', fontWeight: 'normal' });\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    paddingTop: 15,\r\n    paddingBottom: 100,\r\n    paddingHorizontal: 35,\r\n    alignItems: 'center'\r\n  },\r\nheader:{\r\n    width: 575.28,\r\n    height: 100\r\n  },\r\n  wrap:{\r\n    width: 575.28,\r\n  },\r\ncompanyHeader:{\r\n    width: 575.28,\r\n  },\r\n  companyHText:{\r\n    fontSize: '16px',\r\n    textAlign: 'center'\r\n  },\r\n  contactText:{\r\n    textAlign: 'center',\r\n    fontSize: '8px'\r\n  },\r\n  marginTop:{\r\n    marginTop: 2,\r\n  },\r\n  patientHeader:{\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    width: 575.28,\r\n    paddingLeft: '10px',\r\n  },\r\n  pcol:{\r\n    width: 350,\r\n  },\r\n  pcol1:{\r\n    width: 200,\r\n  },\r\n  patientInfoText:{\r\n    fontSize: '10px',\r\n  },\r\n  resultBody:{\r\n    width: 575.28,\r\n    paddingLeft: '10px',\r\n  },\r\n  resultHeader:{\r\n    fontFamily: 'arialbd',\r\n    fontSize: '11px',\r\n    fontWeight: \"bold\",\r\n    width: 575.28\r\n  },\r\n  footer:{\r\n    width: 575.28,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    position: 'absolute',\r\n    bottom: 29,\r\n  },\r\n  footerCol:{\r\n    width: 200,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  footerCol1:{\r\n    width: 200,\r\n    height: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  footerText:{\r\n    fontSize: '9px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  footerMessage:{\r\n    position: 'absolute',\r\n    fontSize: '9px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    bottom: 29,\r\n  },\r\n  resTable:{\r\n    width: 555.28,\r\n  },\r\n  resHText:{\r\n    fontFamily: 'arialbd',\r\n    fontSize: '10px',\r\n    fontWeight: 'bold',\r\n    width: 130,\r\n    textAlign: 'center',\r\n    borderBottom: '1px dotted black',\r\n    borderTop: '1px dotted black',\r\n    padding: 5\r\n  },\r\n  testNameHeader:{\r\n    fontFamily: 'arialbd',\r\n    fontSize: '10px',\r\n    fontWeight: 'bold',\r\n    width: 170,\r\n    textAlign: 'center',\r\n    borderBottom: '1px dotted black',\r\n    borderTop: '1px dotted black',\r\n    padding: 5\r\n  },\r\n  tableHeader:{\r\n    width: 560.28,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resTr:{\r\n    width: 560.28,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n   body:{\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n},\r\ntestName:{\r\n  fontSize: '10px',\r\n  fontWeight: 'bold',\r\n  width: 170,\r\n  padding: 2\r\n},\r\ntrCenter:{\r\n  fontSize: '10px',\r\n  fontWeight: 'bold',\r\n  width: 130,\r\n  padding: 2,\r\n  textAlign: 'center',\r\n},\r\ntrCenterBold:{\r\n  fontFamily: 'arialbd',\r\n  fontSize: '10px',\r\n  fontWeight: 'bold',\r\n  width: 130,\r\n  padding: 2,\r\n  textAlign: 'center',\r\n},\r\nlogo:{\r\n  width: \"55px\",\r\n  position: 'absolute',\r\n  left: \"80px\"\r\n},\r\nsignature:{\r\n  fontFamily: 'arial',\r\n  fontSize: '10px',\r\n},\r\nsignaturePatho:{\r\n  fontFamily: 'arial',\r\n  fontSize: '10px',\r\n}\r\n});\r\n\r\n// Create Document Component\r\nconst ResultForm = (props) => {\r\n  return(\r\n  <Document>\r\n    <Page size=\"A5\" orientation= \"landscape\" style={styles.page}>\r\n      <View style={styles.wrap}>\r\n        <View fixed={true} style={styles.header}>\r\n          <View style={styles.companyHeader}>\r\n            <Image src={logo} style={styles.logo} fixed={true}/>\r\n            <Text style={styles.companyHText}>St. Camillus De Lellis General Hospital</Text>\r\n            <Text style={styles.companyHText}>Laboratory Department</Text>\r\n            <Text style={styles.contactText}>Telephone No.: 600-1125  |  e-mail: st.camillusdelellislab@yahoo.com</Text>\r\n            <Text style={[styles.companyHText, styles.marginTop]}>Laboratory Report</Text>\r\n          </View>\r\n          <View style={styles.patientHeader}>\r\n            <View style={styles.pcol}>\r\n              <Text style={styles.patientInfoText}>Patient Name: {props.data.Patientlists[0].lastname}, {props.data.Patientlists[0].firstname} {props.data.Patientlists[0].middlename}</Text>\r\n              <Text style={styles.patientInfoText}>Age/Gender: {props.data.Patientlists[0].age} / {props.data.Patientlists[0].gender}</Text>\r\n              <Text style={styles.patientInfoText}>Requesting Physician: {props.data.reqDr}</Text>\r\n            </View>\r\n\r\n            <View style={styles.pcol1}>\r\n              <Text style={styles.patientInfoText}>Date: {Moment(props.data.createdAt).format('MMMM DD, yyyy')}</Text>\r\n              <Text style={styles.patientInfoText}>Paitent Type/Room: {props.data.ptType}</Text>\r\n              <Text style={styles.patientInfoText}>Laboratory Number: {props.data.labNumber}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.resultBody}>\r\n          <Text fixed={true} style={styles.resultHeader}>Section: {props.data.Sectionorders[0].section}</Text>\r\n          \r\n          <View style={styles.resTable}>\r\n            \r\n            <View style={styles.tableHeader} fixed={true}>\r\n                <Text style={styles.testNameHeader}>Test Name</Text>\r\n                <Text style={styles.resHText}>Result</Text>\r\n                <Text style={styles.resHText}>Unit</Text>\r\n                <Text style={styles.resHText}>Reference</Text>\r\n            </View>\r\n            {props.data.Sectionorders[0].Sectionresults.map((result, index) => {\r\n                return(\r\n                    <View key={index}>\r\n                    {result.result === \"!\" || result.result === null ?  <View></View> : <View wrap={false} style={styles.resTr}>\r\n                     {result.Testslist.isPackage === true && <Text style={styles.trCenterBold}>{result.Testslist.testname}</Text>}\r\n                     {result.Testslist.isPackage === false && <Text style={styles.testName}>{result.Testslist.testname}</Text>}\r\n                    <Text style={styles.trCenter}>{result.result}</Text>\r\n                    {result.Testslist.isPackage === true && <Text style={styles.trCenter}></Text>}\r\n                    {result.Testslist.isPackage === false && <Text style={styles.trCenter}>{result.Testslist.unit}</Text>}\r\n                    {result.Testslist.Referencevalue == null &&  <Text style={styles.trCenter}></Text>}\r\n                    {result.Testslist.Referencevalue !== null && props.data.Patientlists[0].gender === \"Male\" && <Text style={styles.trCenter}>{result.Testslist.Referencevalue.Male}</Text>}\r\n                    {result.Testslist.Referencevalue !== null && props.data.Patientlists[0].gender === \"Female\" && <Text style={styles.trCenter}>{result.Testslist.Referencevalue.Female}</Text>}\r\n                </View>}\r\n                    </View>)\r\n            })}\r\n\r\n          </View>\r\n          \r\n        </View>\r\n      \r\n      \r\n      \r\n      \r\n        </View>\r\n         <View fixed={true} style={styles.footer}>\r\n          <View style={styles.footerCol}>\r\n            <Text style={styles.signature} fixed={true}>{props.data.Sectionorders[0].releasedBy}</Text>\r\n            <Text style={styles.footerText}>REGISTERED MEDICAL TECHNOLOGIST</Text>\r\n          </View>\r\n\r\n          <View style={styles.footerCol1} wrap={false}>\r\n          <Text style={styles.signaturePatho} fixed={true}>{props.data.Sectionorders[0].pathologist}</Text>\r\n          <Text style={styles.footerText}>PATHOLOGIST</Text>\r\n          </View>\r\n        </View>\r\n    </Page>\r\n      \r\n  </Document>\r\n)\r\n};\r\n\r\nexport default ResultForm;\r\n","import React from 'react'\r\nimport { Page, Image, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';\r\nimport Moment from 'moment'\r\nimport arialbd from '../../fonts/arialbd.ttf'\r\nimport logo from '../../images/stcamlogo.jpg'\r\n\r\nFont.register({ family: 'arialbd', src: arialbd, fontStyle: 'normal', fontWeight: 'bold' });\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    paddingTop: 15,\r\n    paddingBottom: 100,\r\n    paddingHorizontal: 35,\r\n    alignItems: 'center'\r\n  },\r\nheader:{\r\n    width: 575.28,\r\n    height: 120,\r\n    marginBottom: \"5px\"\r\n  },\r\n  wrap:{\r\n    width: 575.28,\r\n  },\r\ncompanyHeader:{\r\n    width: 575.28,\r\n    marginBottom: \"10px\"\r\n  },\r\n  companyHText:{\r\n    fontSize: '16px',\r\n    textAlign: 'center'\r\n  },\r\n  contactText:{\r\n    textAlign: 'center',\r\n    fontSize: '8px'\r\n  },\r\n  marginTop:{\r\n    marginTop: 2,\r\n  },\r\n  patientHeader:{\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    width: 575.28,\r\n    paddingLeft: '10px',\r\n  },\r\n  pcol:{\r\n    width: 350,\r\n  },\r\n  pcol1:{\r\n    width: 200,\r\n  },\r\n  patientInfoText:{\r\n    fontSize: '10px',\r\n  },\r\n  resultBody:{\r\n    width: 575.28,\r\n    paddingLeft: '10px',\r\n  },\r\n  resultHeader:{\r\n    fontFamily: 'Helvetica-Bold',\r\n    fontSize: '11px',\r\n    fontWeight: 'bold',\r\n    width: 575.28\r\n  },\r\n  footer:{\r\n    width: 575.28,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    position: 'absolute',\r\n    bottom: 29,\r\n  },\r\n  footerCol:{\r\n    width: 200,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  footerCol1:{\r\n    width: 200,\r\n    height: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  footerText:{\r\n    fontSize: '9px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  footerMessage:{\r\n    position: 'absolute',\r\n    fontSize: '9px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    bottom: 29,\r\n  },\r\n  resTable:{\r\n    width: 555.28,\r\n  },\r\n  resHText:{\r\n    fontFamily: 'Helvetica-Bold',\r\n    fontSize: '10px',\r\n    width: 130,\r\n    textAlign: 'center',\r\n    borderBottom: '1px dotted black',\r\n    borderTop: '1px dotted black',\r\n    padding: 5\r\n  },\r\n  testNameHeader:{\r\n    fontFamily: 'Helvetica-Bold',\r\n    fontSize: '10px',\r\n    fontWeight: 'bold',\r\n    width: 170,\r\n    textAlign: 'center',\r\n    borderBottom: '1px dotted black',\r\n    borderTop: '1px dotted black',\r\n    padding: 5\r\n  },\r\n  tableHeader:{\r\n    width: 560.28,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  resTr:{\r\n    width: 560.28,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: \"2px\",\r\n    marginBottom: \"2px\"\r\n  },\r\n   body:{\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n},\r\ntestName:{\r\n  fontSize: '10px',\r\n  width: 170,\r\n  padding: 2\r\n},\r\ntrCenter:{\r\n  fontSize: '10px',\r\n  width: 130,\r\n  padding: 2,\r\n  textAlign: 'center',\r\n},\r\ntrCenterBold:{\r\n  fontFamily: 'Helvetica-Bold',\r\n  fontSize: '11px',\r\n  width: 130,\r\n  padding: 2,\r\n  textAlign: 'center',\r\n},\r\nlogo:{\r\n  width: \"55px\",\r\n  position: 'absolute',\r\n  left: \"80px\"\r\n},\r\nsignature:{\r\n  fontFamily: 'arial',\r\n  fontSize: '10px',\r\n},\r\nsignaturePatho:{\r\n  fontFamily: 'arial',\r\n  fontSize: '10px',\r\n}\r\n});\r\n\r\n// Create Document Component\r\nconst ResultFormA4 = (props) => {\r\n  return(\r\n  <Document>\r\n    <Page size=\"A4\" orientation= \"portrait\" style={styles.page}>\r\n      <View style={styles.wrap}>\r\n        <View fixed={true} style={styles.header}>\r\n          <View style={styles.companyHeader}>\r\n            <Image src={logo} style={styles.logo} fixed={true}/>\r\n            <Text style={styles.companyHText}>St. Camillus De Lellis General Hospital</Text>\r\n            <Text style={styles.companyHText}>Laboratory Department</Text>\r\n            <Text style={styles.contactText}>Telephone No.: 600-1125  |  e-mail: st.camillusdelellislab@yahoo.com</Text>\r\n            <Text style={[styles.companyHText, styles.marginTop]}>Laboratory Report</Text>\r\n          </View>\r\n          <View style={styles.patientHeader}>\r\n            <View style={styles.pcol}>\r\n              <Text style={styles.patientInfoText}>Patient Name: {props.data.Patientlists[0].lastname}, {props.data.Patientlists[0].firstname} {props.data.Patientlists[0].middlename}</Text>\r\n              <Text style={styles.patientInfoText}>Age/Gender: {props.data.Patientlists[0].age} / {props.data.Patientlists[0].gender}</Text>\r\n              <Text style={styles.patientInfoText}>Requesting Physician: {props.data.reqDr}</Text>\r\n            </View>\r\n\r\n            <View style={styles.pcol1}>\r\n              <Text style={styles.patientInfoText}>Date: {Moment(props.data.createdAt).format('MMMM DD, yyyy')}</Text>\r\n              <Text style={styles.patientInfoText}>Paitent Type/Room: {props.data.ptType}</Text>\r\n              <Text style={styles.patientInfoText}>Laboratory Number: {props.data.labNumber}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.resultBody}>\r\n          <Text fixed={true} style={styles.resultHeader}>Section: {props.data.Sectionorders[0].section}</Text>\r\n          \r\n          <View style={styles.resTable}>\r\n            \r\n            <View style={styles.tableHeader} fixed={true}>\r\n                <Text style={styles.testNameHeader}>Test Name</Text>\r\n                <Text style={styles.resHText}>Result</Text>\r\n                <Text style={styles.resHText}>Unit</Text>\r\n                <Text style={styles.resHText}>Reference</Text>\r\n            </View>\r\n            {props.data.Sectionorders[0].Sectionresults.map((result, index) => {\r\n                return(\r\n                    <View key={index}>\r\n                    {result.result === \"!\" || result.result === null ?  <View></View> : <View wrap={false} style={styles.resTr}>\r\n                     {result.Testslist.isPackage === true && <Text style={styles.trCenterBold}>{result.Testslist.testname}</Text>}\r\n                     {result.Testslist.isPackage === false && <Text style={styles.testName}>{result.Testslist.testname}</Text>}\r\n                    <Text style={styles.trCenter}>{result.result}</Text>\r\n                    {result.Testslist.isPackage === true && <Text style={styles.trCenter}></Text>}\r\n                    {result.Testslist.isPackage === false && <Text style={styles.trCenter}>{result.Testslist.unit}</Text>}\r\n                    {result.Testslist.Referencevalue == null &&  <Text style={styles.trCenter}></Text>}\r\n                    {result.Testslist.Referencevalue !== null && props.data.Patientlists[0].gender === \"Male\" && <Text style={styles.trCenter}>{result.Testslist.Referencevalue.Male}</Text>}\r\n                    {result.Testslist.Referencevalue !== null && props.data.Patientlists[0].gender === \"Female\" && <Text style={styles.trCenter}>{result.Testslist.Referencevalue.Female}</Text>}\r\n                </View>}\r\n                    </View>)\r\n            })}\r\n\r\n          </View>\r\n          \r\n        </View>\r\n      \r\n      \r\n      \r\n      \r\n        </View>\r\n         <View fixed={true} style={styles.footer}>\r\n          <View style={styles.footerCol}>\r\n            {/* IMAGE HERE FOR RMT */}\r\n            <Text style={styles.signature} fixed={true}>{props.data.Sectionorders[0].releasedBy}</Text>\r\n            <Text style={styles.footerText}>REGISTERED MEDICAL TECHNOLOGIST</Text>\r\n          </View>\r\n\r\n          <View style={styles.footerCol1}>\r\n          <Text style={styles.signaturePatho} fixed={true}>{props.data.Sectionorders[0].pathologist}</Text>\r\n          <Text style={styles.footerText}>PATHOLOGIST</Text>\r\n          </View>\r\n        </View>\r\n    </Page>\r\n      \r\n  </Document>\r\n)\r\n};\r\n\r\nexport default ResultFormA4;\r\n","import React from 'react'\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport ResultForm from '../results/ResultForm'\r\nimport ResultFormA4 from '../results/ResultFormA4'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport '../laboratory/checkin/checkinmodal.css'\r\n\r\nfunction Selectsize(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [resultData, setResultData] = useState([])\r\n\r\n    useEffect(()=> {\r\n            axios.get(`http://localhost:3001/order/results/${props.forOrderID}/${props.section}`).then((response) => {\r\n            setResultData(response.data)\r\n            setIsLoading(false)\r\n        })\r\n    }, [props.forOrderID, props.sectionserve])\r\n\r\n\r\n    if(props.show === false){\r\n        return null\r\n\r\n    }else{\r\n        if(isLoading === true){\r\n            return(<div>Loading</div>)\r\n        }else{\r\n            return (\r\n                <div className=\"checkin-modal\">\r\n                    <div className=\"login-modal-wrapper\">\r\n                        <div className=\"loading-modal-header\">\r\n                            <div><strong>&nbsp;</strong></div>\r\n                            <div className=\"checkin-closebtn\" onClick={()=>{props.setShow(false)}}>X</div>\r\n                        </div>\r\n                            <div className=\"checkin-modal-body\">\r\n                               <strong>Please select paper size</strong><br />\r\n                                \r\n                               <PDFDownloadLink\r\n                                document={<ResultForm data={resultData[0]} />}\r\n                                fileName={`${props.detail.sectNumber}`}\r\n                                className=\"size-btn\"\r\n                                >\r\n                                  {({ blob, url, loading, error }) =>\r\n                                    loading ? 'Loading...' : 'A5 (half)'\r\n                                }\r\n                                </PDFDownloadLink>\r\n    \r\n                                <PDFDownloadLink\r\n                                document={<ResultFormA4 data={resultData[0]}/>}\r\n                                fileName={`${props.detail.sectNumber}`}\r\n                                className=\"size-btn\"\r\n                                data={resultData[0]}\r\n                                >\r\n                                   {({ blob, url, loading, error }) =>\r\n                                    loading ? 'Loading...' : 'A4 (whole)'\r\n                                }\r\n                                </PDFDownloadLink>\r\n                            </div>\r\n                        <div className=\"checkin-modal-footer\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Selectsize\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport LoadingModal from '../LoadingModal'\r\nimport Selectsize from './Selectsize'\r\n\r\nfunction DetailTr({detail}) {\r\n\r\n    const [isLoading] = useState(false)\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n    const onGenerate = () => {\r\n        setModalShow(true)\r\n    }\r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"ptregwrapper\">\r\n                <LoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <tr>\r\n            <td>{detail.sectNumber}</td>\r\n            <td>{detail.status}</td>\r\n            <td>\r\n                  <Selectsize show={modalShow} setShow={setModalShow} detail={detail} forOrderID={detail.forOrderID} section={detail.section}/>\r\n                {detail.status === \"RELEASED\" && <button className=\"checkin-btn accept\" onClick={onGenerate}>Generate Report</button>}\r\n          \r\n                {detail.status !== \"RELEASED\"  && <button className=\"checkin-btn-disabled\" disabled={true} onClick={onGenerate}>Generate Report</button>}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DetailTr\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport '../../components/ptregistration/ptreg.css'\r\nimport './orderdetails.css'\r\nimport DetailTr from './DetailTr'\r\n\r\n\r\nfunction OrderDetails() {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [orderDetails, setOrderDetails] = useState({})\r\n    let { labNumber } = useParams();\r\n    let history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/getorder/${labNumber}`, {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response) => {\r\n            setOrderDetails(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[labNumber])\r\n\r\n    const onOrderDelete =  async () => {\r\n        await axios.post(`http://localhost:3001/order/labno/update`, {\r\n            labNumber: orderDetails[0].labNumber,\r\n            status: \"DELETED\"\r\n        })\r\n        alert(\"Order deleted\");\r\n        history.push('/orders')\r\n    }\r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"ptregwrapper\">\r\n            <h3>Loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"labwrapper-orderdeats\">\r\n        <h1 className=\"labcontentheader-orderdeats\">&nbsp; Order Details</h1>\r\n            <div className=\"labdiv\">\r\n                <div className=\"labdivcontent p-10\">\r\n                    <h4 className=\"center\">Lab Number {orderDetails[0].labNumber} </h4>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"divblock p-10\">\r\n                    <strong>Name:</strong> <p className=\"orderdetail\">{orderDetails[0].Patientlists[0].lastname}, {orderDetails[0].Patientlists[0].firstname} {orderDetails[0].Patientlists[0].middlename}</p>\r\n                    </div>\r\n\r\n                    <div className=\"divblock p-10\">\r\n                    <strong>Age/Gender:</strong> <p className=\"orderdetail\">{orderDetails[0].Patientlists[0].age}/{orderDetails[0].Patientlists[0].gender}</p>\r\n                    </div>\r\n\r\n                    <div className=\"divblock p-10\">\r\n                    <strong>Requesting Physician:</strong> <p className=\"orderdetail\">{orderDetails[0].reqDr}</p>\r\n                    </div>\r\n                <div className=\"divblock p-10\">\r\n                    <strong>Test/s Status:</strong>\r\n                </div>\r\n                <div className=\"divblock p-10\">\r\n                <table className=\"detailtable\">\r\n                    <tbody>\r\n                        <tr className=\"header\">\r\n                            <th>Section LabNumber</th>\r\n                            <th>Status</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        {orderDetails[0].Sectionorders.map((detail, index) => {\r\n                            return (\r\n                                <DetailTr detail={detail} key={index} />\r\n                                )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div className=\"divblock p-10\">\r\n                {orderDetails[0].status !== \"RELEASED\" && <button onClick={onOrderDelete} className=\"btn delete\">Delete/Archive</button>}\r\n                </div><br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction LabNav() {\r\n    return (\r\n        <nav className=\"lab\">\r\n        <li>\r\n            <ul><Link to=\"/\">Reception</Link></ul>\r\n            <ul><Link to=\"/laboratory\">Specimen Check-in</Link></ul>\r\n            <ul><Link to=\"/laboratory/chemistry\">Chemistry</Link></ul>\r\n            <ul><Link to=\"/laboratory/hematology\">Hematology</Link></ul>\r\n            <ul><Link to=\"/laboratory/cm\">Clinical Microscopy</Link></ul>\r\n            <ul><Link to=\"/laboratory/sero\">Serology</Link></ul>\r\n        </li>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default LabNav\r\n","import React from 'react'\r\n\r\nfunction checkInTr({details, setShow, setOrderID}) {\r\n\r\n    const selectHandler = () => {\r\n        setShow(true);\r\n        setOrderID(details.Sectionorders[0].forOrderID);\r\n    }\r\n    return (\r\n        <tr className=\"tbcontent lab rform\">\r\n                <td>{details.labNumber}</td>\r\n                <td>{details.Patientlists[0].lastname}, {details.Patientlists[0].firstname} {details.Patientlists[0].middlename}</td>\r\n                <td>{details.Sectionorders[0].tests}</td>\r\n                <td onClick={selectHandler}>Select</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default checkInTr\r\n","import React from 'react'\r\nimport '../components/laboratory/checkin/checkinmodal.css'\r\nimport loading from '../images/loading.gif'\r\n\r\nfunction LabLoadingModal() {\r\n\r\n    return (\r\n        <div className=\"loading-modal\">\r\n            <div className=\"login-modal-wrapper\">\r\n                <div className=\"checkin-modal-header\">\r\n                    <div><strong>&nbsp;</strong></div>\r\n                </div>\r\n                    <div className=\"loading-modal-body\">\r\n                        <img src={loading} alt=\"loading\" width=\"auto\"  style={{marginRight: \"10px\"}}/>\r\n                       <strong>Loading please wait...</strong><br />\r\n                    </div>\r\n                <div className=\"checkin-modal-footer\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LabLoadingModal\r\n","import React from 'react'\r\nimport './checkinmodal.css'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react'\r\nimport LabLoadingModal from '../../LabLoadingModal';\r\n\r\n\r\nfunction CheckInModal(props) {\r\n\r\n    let history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    \r\n\r\n    if(isLoading === true){\r\n        return (\r\n            <LabLoadingModal />\r\n        )\r\n    }\r\n    const onAccept = async () => {\r\n        setIsLoading(true);\r\n        props.setShow(false);\r\n\r\n        if(props.selected[0].Sectionorders[0].status === \"Sample Rejected - For Check-In\"){\r\n\r\n            await axios.post(\"http://localhost:3001/order/updatesorder\", {\r\n                status: \"RUNNING\",\r\n                sectNumber: props.selected[0].Sectionorders[0].sectNumber\r\n            },\r\n            {\r\n                headers: {\r\n                    accessToken: localStorage.getItem(\"accessToken\")\r\n                }\r\n            }).then((response) => {\r\n                if(response.data.error){\r\n                    alert(\"You are not logged in, please log in!\");\r\n                    history.push(\"/login\");\r\n                }\r\n            })\r\n        }else{\r\n            await axios.post(\"http://localhost:3001/order/updatesorder\", {\r\n            status: \"RUNNING\",\r\n            sectNumber: props.selected[0].Sectionorders[0].sectNumber\r\n        },\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in, please log in!\");\r\n                history.push(\"/login\");\r\n            }\r\n        })\r\n\r\n        // create result form\r\n        \r\n        const etests = props.selected[0].Sectionorders[0].tests;\r\n        const expTests = etests.split(\" \");\r\n        expTests.pop();\r\n\r\n        for (let i = 0; i < expTests.length; i++){\r\n\r\n            console.log(`${expTests[i]} checked in`);\r\n\r\n        // IF PROFILE\r\n        // Chemistry Profiles\r\n            if(expTests[i] === \"LIPID\"){\r\n                const test = [\"LIPID\",\"CHOLE\",\"TRIG\",\"HDL\",\"LDL\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 500)\r\n            }\r\n            // CM Profiles\r\n            else if(expTests[i] === \"URINAL\"){\r\n                const test = [\"URINAL\",\"URINPHY\",\"UCOLOR\",\"UTRANS\",\"UCHEM\",\"UPH\",\"USG\",\"UCHON\",\"UGLU\",\"UWBC\",\"UBLD\",\"UROBIL\", \"UBILI\", \"UNIT\", \"UKET\", \"URINMIC\", \"UPUS\", \"UMRBC\", \"UECLS\", \"UMAM\", \"UMUC\", \"UMBAC\", \"UCASTS\", \"UCRYS\", \"UPARA\", \"UMOTH\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 500)\r\n            }\r\n            else if(expTests[i] === \"FECA\"){\r\n                const test = [\"FECA\",\"FPHYS\",\"FCOL\", \"FCONSIS\", \"FMICRO\", \"FPUS\", \"FBLO\",\"FECPARA\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 1500)\r\n            }\r\n            // Hema Profiles\r\n            else if(expTests[i] === \"CBCPLT\"){\r\n                const test = [\"WBCCT\",\"GRNCT\",\"LYMPCT\",\"MID\",\"RBCCT\",\"HGB\",\"HCT\",\"MCV\",\"MCH\",\"MCHC\",\"PLTCT\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 500)\r\n            }\r\n            else if(expTests[i] === \"Hgb/Hct\"){\r\n                const test = [\"HGB\",\"HCT\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 500)\r\n            }\r\n            else if(expTests[i] === \"PTINR\"){\r\n                const test = [\"PTINR\",\"PT\",\"CONT\",\"PTACT\",\"INR\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 500)\r\n            }\r\n            // Sero Profiles\r\n            else if(expTests[i] === \"DNGBLT\"){\r\n                const test = [\"DNGBLT\",\"DENGIGG\", \"DENGIGM\"]\r\n                setTimeout(async () => {\r\n                    for(let i=0; i<test.length; i++){\r\n                        await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n                            test: test[i],\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                accessToken: localStorage.getItem(\"accessToken\")\r\n                            }\r\n                        })  \r\n                    }\r\n                }, 500)\r\n            }\r\n\r\n            //MircroProfiles\r\n        else { await axios.post(`http://localhost:3001/order/form/result/create/${props.selected[0].Sectionorders[0].id}`, {\r\n            test: expTests[i],\r\n        },\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\")\r\n            }\r\n        })}\r\n\r\n        }\r\n        }\r\n\r\n\r\n\r\n        \r\n        await axios.get(`http://localhost:3001/order/forcheckin/${props.section}`).then((response) => {\r\n            props.setCheckInDetails(response.data);\r\n        })\r\n        setTimeout(()=>{setIsLoading(false);}, 1000)\r\n        setIsLoading(false);\r\n\r\n    }\r\n\r\n    if(!props.show){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkin-modal\">\r\n            <div className=\"checkin-modal-wrapper\">\r\n                <div className=\"checkin-modal-header\">\r\n                    <div><strong>Specimen Check-in Module:</strong></div>\r\n                    <div className=\"checkin-closebtn\" onClick={props.closeModal}>X</div>\r\n                </div>\r\n                    <div className=\"checkin-modal-body\">\r\n                        <p className=\"order-dits\">\r\n                            <strong>Patient Name:</strong> {props.selected[0].Patientlists[0].lastname}, {props.selected[0].Patientlists[0].firstname} {props.selected[0].Patientlists[0].middlename}<br />\r\n                            <strong>Section:</strong> {props.selected[0].Sectionorders[0].section}<br />\r\n                            <strong>Lab Number:</strong> {props.selected[0].Sectionorders[0].sectNumber}<br />\r\n                            <strong>Test/s:</strong> {props.selected[0].Sectionorders[0].tests}\r\n                        </p>\r\n                    </div>\r\n                <div className=\"checkin-modal-footer\">\r\n                        <input type=\"button\" className=\"checkin-btn accept\" value=\"Accept\" onClick={onAccept}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckInModal\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './lab.css'\r\nimport Header from '../Header';\r\nimport LabNav from './LabNav';\r\nimport CheckInTr from './checkin/CheckInTr';\r\nimport CheckInModal from './checkin/CheckInModal';\r\nimport NotLoggedInModal from '../NotLoggedInModal';\r\nimport LabLoadingModal from '../LabLoadingModal';\r\n\r\n\r\nfunction LabClient() {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [checkInDetails, setCheckInDetails] = useState([]);\r\n    const [section, setSection] = useState(\"Chemistry\");\r\n    const [show, setShow] = useState(false);\r\n    const [orderid, setOrderID] = useState(0);\r\n    const [orderselected, setSelected] = useState([  {\r\n                                                    \"id\": 3,\r\n                                                    \"reqDr\": \"N/A\",\r\n                                                    \"testsRequested\": \"FBS LIPID CBCPLT URINAL \",\r\n                                                    \"encodedBy\": \"ALVINJOHNEB\",\r\n                                                    \"labNumber\": \"CAM-2021-9-3\",\r\n                                                    \"status\": \"PENDING\",\r\n                                                    \"createdAt\": \"2021-09-05T11:54:30.000Z\",\r\n                                                    \"updatedAt\": \"2021-09-05T11:54:30.000Z\",\r\n                                                    \"forPtId\": 1,\r\n                                                    \"Sectionorders\": [\r\n                                                    {\r\n                                                        \"id\": 4,\r\n                                                        \"sectNumber\": \"(CHEM)-CAM-2021-9-3\",\r\n                                                        \"section\": \"Chemistry\",\r\n                                                        \"tests\": \"FBS LIPID \",\r\n                                                        \"status\": \"FOR CHECK-IN\",\r\n                                                        \"updatedBy\": \"ALVINJOHNEB\",\r\n                                                        \"createdAt\": \"2021-09-05T11:54:30.000Z\",\r\n                                                        \"updatedAt\": \"2021-09-05T11:54:30.000Z\",\r\n                                                        \"forOrderID\": 3\r\n                                                    }\r\n                                                    ],\r\n                                                    \"Patientlists\": [\r\n                                                    {\r\n                                                        \"id\": 1,\r\n                                                        \"branchid\": \"CAMILLUS-1\",\r\n                                                        \"lastname\": \"Bregana\",\r\n                                                        \"firstname\": \"Alvin John\",\r\n                                                        \"middlename\": \"Edra\",\r\n                                                        \"gender\": \"Male\",\r\n                                                        \"bday\": \"1999-10-30\",\r\n                                                        \"age\": 23,\r\n                                                        \"address\": \"Aguitap\",\r\n                                                        \"phone\": \"09997725143\",\r\n                                                        \"idenno\": \"2151607\",\r\n                                                        \"createdAt\": \"2021-09-05T09:46:28.000Z\",\r\n                                                        \"updatedAt\": \"2021-09-05T11:53:37.000Z\",\r\n                                                        \"Orderlist\": {\r\n                                                        \"PatientlistId\": 1,\r\n                                                        \"OrderId\": 3\r\n                                                        }\r\n                                                    }\r\n                                                    ]\r\n                                                }]);\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n    useEffect(() => {\r\n\r\n        axios.get(`http://localhost:3001/order/forcheckin/Chemistry`).then((response) => {\r\n            setCheckInDetails(response.data);\r\n            setSection(\"Chemistry\");\r\n            setIsLoading(false);\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/getorder/id/${orderid}/${section}`).then((response) => {\r\n            if(response.data.length === 1){\r\n             setSelected(response.data);\r\n             setIsLoading(false);\r\n            }\r\n         })\r\n     },[orderid, section])\r\n\r\n\r\n\r\n    const sectionHandler = (e) => {\r\n        const section = e.target.value;\r\n        setSection(section);\r\n\r\n        axios.get(`http://localhost:3001/order/forcheckin/${section}`).then((response) => {\r\n            setCheckInDetails(response.data);\r\n        })\r\n    }\r\n\r\n    const showModal = () =>{\r\n        setShow(true);\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setShow(false);\r\n    }\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 10;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(checkInDetails.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayOrders = checkInDetails.slice(pagesVisited, pagesVisited + orderPerPage).map((details) => {\r\n        return ( <CheckInTr \r\n            details={details} \r\n            key={details.id}\r\n            setShow={setShow} \r\n            setOrderID={setOrderID}\r\n        />)\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n\r\n        await axios.get(`http://localhost:3001/order/forcheckin/Chemistry/${data.labNumber}`).then((response) => {\r\n            if(response.data.length === 0){\r\n                alert('No order found with that lab number!')\r\n            }else{\r\n                setCheckInDetails(response.data);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n               <LabLoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <NotLoggedInModal />\r\n            <Header />\r\n            <LabNav />\r\n              <section>\r\n              <div className=\"ptregwrapper\">\r\n\r\n                <div className=\"labwrapper\">\r\n\r\n                        <h1 className=\"labcontentheader\">Specimen Check-in</h1>\r\n\r\n                        \r\n                        <div className=\"labdiv\">\r\n                            <div className=\"labdivcontent\">\r\n                                <div className=\"form-group space\">\r\n                                    <div className=\"form-content\">\r\n                                        <div className=\"form-content\">\r\n                                            <label className=\"filter-label\">Section:</label><br />\r\n\r\n                                            <select id=\"form-field\" onChange={sectionHandler}>\r\n                                                <option value=\"Chemistry\">Chemistry</option>\r\n                                                <option value=\"Hematology\">Hematology</option>\r\n                                                <option value=\"CM\">Clinical Microscopy</option>\r\n                                                <option value=\"Serology\">Serology</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        \r\n                                        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                                            <Form  className=\"margin-0\">\r\n                                                <label className = \"filter-label\">Filter:</label>\r\n                                                <Field \r\n                                                        name=\"labNumber\"\r\n                                                        id=\"form-field\"\r\n                                                        type=\"text\"\r\n                                                        placeholder = \"Enter lab no...\"\r\n                                                />\r\n                                                <button className=\"form-botton filter\" type=\"submit\">Search</button>\r\n                                            </Form>\r\n                                        </Formik>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <table className=\"tablelab\">\r\n                                    <tbody>\r\n                                        <tr className=\"labheader\">\r\n                                            <th>LabNumber</th>\r\n                                            <th>Client Name</th>\r\n                                            <th>Test/s</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                        {displayOrders}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                            <br />\r\n                                {pageCount > 1 &&\r\n                                    <ReactPaginate\r\n                                    previousLabel = {\"<\"}\r\n                                    nextLabel = {\">\"}\r\n                                    pageCount = {pageCount}\r\n                                    onPageChange={changePage}\r\n                                    containerClassName={\"pagination-bttns\"}\r\n                                    previousLinkClassName={\"prevBttn\"}\r\n                                    nextLinkClassName={\"nextbtn\"}\r\n                                    disabledClassName={\"pgnte-disabled\"}\r\n                                    activeClassName={\"pgninate-active\"}\r\n                                />\r\n                                }\r\n                        </div>\r\n                        \r\n                </div>\r\n             </div>\r\n             <CheckInModal\r\n                show={show}\r\n                showModal={showModal}\r\n                closeModal={closeModal}\r\n                selected={orderselected}\r\n                setShow={setShow}\r\n                section={section}\r\n                setCheckInDetails={setCheckInDetails}\r\n                />\r\n             </section>\r\n              <footer>Laboratory Information System by Bregs</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LabClient\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction ChemTr({ setPrevResultData, details, setShow, setResultFormData, setSectionResultArray}) {\r\n\r\n    const selectHandler = async () => {\r\n\r\n        await axios.get(`http://localhost:3001/order/resultform/${details.labNumber}/${details.Sectionorders[0].section}`).then((response) => {\r\n        setResultFormData(response.data);\r\n        setSectionResultArray(response.data[0].Sectionorders[0].Sectionresults);\r\n        setShow(true);\r\n        \r\n        axios.get(`http://localhost:3001/order/result/previous/${response.data[0].Patientlists[0].id}/${details.Sectionorders[0].section}`).then((response) => {\r\n            setPrevResultData(response.data)\r\n        })\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <tr className=\"lab tbcontent\">\r\n                <td>{details.labNumber}</td>\r\n                <td>{details.Patientlists[0].lastname}, {details.Patientlists[0].firstname} {details.Patientlists[0].middlename}</td>\r\n                <td>{details.Sectionorders[0].tests}</td>\r\n                <td onClick={selectHandler}>Select</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ChemTr\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction ChemTest({test, ptdata, status}) {\r\n\r\n    let history = useHistory();\r\n\r\n    const saveResult = async (e) => {\r\n        const result = e.target.value;\r\n        const sResultID = test.id\r\n        \r\n        await axios.post(`http://localhost:3001/order/result/update/${sResultID}/${result}`,{},\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in. Please log-in!\");\r\n                history.push('/login');\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Result not updated\");\r\n        })\r\n    }\r\n\r\n\r\n    if(test.Testslist.isPackage){\r\n        return (\r\n\r\n            <tr className=\"rform-header\">\r\n                <td colSpan={4}><strong>{test.Testslist.testname}</strong></td>\r\n            </tr>\r\n\r\n        )\r\n    }else{\r\n        if(ptdata.gender === \"Male\"){\r\n            if(test.isQuali === true){\r\n                const options = test.options.split(',');\r\n                return (\r\n                    <tr className=\"rform\">\r\n                        <td >{test.Testslist.testname}</td>\r\n                        {status === \"RUNNING\" && \r\n                            <td>\r\n                                <select onChange={saveResult}>\r\n                                    <option></option>\r\n                                    {options.map((option, index) => {\r\n                                        if(test.result === option){\r\n                                        return(\r\n                                            <option selected={true} key={index}>{option}</option>\r\n                                            )\r\n                                        }else{\r\n                                            return(<option key={index}>{option}</option>)\r\n                                        }\r\n                                    })}\r\n                                </select>\r\n                            </td>}\r\n                        {status === \"RELEASED\" && <td><input disabled={true} className=\"rform-input\" type=\"text\" value={test.result} /></td>}\r\n                        <td>{test.Testslist.unit}</td>\r\n                        <td>{test.Testslist.Referencevalue.Male}</td>\r\n                    </tr>\r\n            )        \r\n            }else{\r\n                return(\r\n                <tr className=\"rform\">\r\n                    <td >{test.Testslist.testname}</td>\r\n                    {status === \"RUNNING\" && test.isQuali === false && <td><input onBlur={saveResult} className=\"rform-input\" type=\"text\" placeholder={test.result} /></td>}\r\n                    {status === \"RELEASED\" && <td><input disabled={true} className=\"rform-input\" type=\"text\" value={test.result} /></td>}\r\n                    <td>{test.Testslist.unit}</td>\r\n                    <td>{test.Testslist.Referencevalue.Male}</td>\r\n                </tr>                    \r\n                )\r\n            }\r\n        }else{\r\n            if(test.isQuali === true){\r\n                const options = test.options.split(',');\r\n                return (\r\n                    <tr className=\"rform\">\r\n                        <td >{test.Testslist.testname}</td>\r\n                        {status === \"RUNNING\" && \r\n                            <td>\r\n                                <select onChange={saveResult}>\r\n                                    <option></option>\r\n                                    {options.map((option, index) => {\r\n                                        return(<option key={index}>{option}</option>)\r\n                                    })}\r\n                                </select>\r\n                            </td>}\r\n                        {status === \"RELEASED\" && <td><input disabled={true} className=\"rform-input\" type=\"text\" value={test.result} /></td>}\r\n                        <td>{test.Testslist.unit}</td>\r\n                        <td>{test.Testslist.Referencevalue.Male}</td>\r\n                    </tr>\r\n            )        \r\n            }else{\r\n                return(\r\n                <tr className=\"rform\">\r\n                    <td >{test.Testslist.testname}</td>\r\n                    {status === \"RUNNING\" && test.isQuali === false && <td><input onBlur={saveResult} className=\"rform-input\" type=\"text\" placeholder={test.result} /></td>}\r\n                    {status === \"RELEASED\" && <td><input disabled={true} className=\"rform-input\" type=\"text\" value={test.result} /></td>}\r\n                    <td>{test.Testslist.unit}</td>\r\n                    <td>{test.Testslist.Referencevalue.Male}</td>\r\n                </tr>                    \r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ChemTest\r\n","import React from 'react'\r\n\r\nfunction PrevTr({prevResultData, test}) {\r\n\r\n\r\n    if(test.Testslist.isPackage === true){\r\n        return(<tr className=\"rform-header\">\r\n        <td colSpan={4}><strong>{test.Testslist.testname}</strong></td>\r\n    </tr>)\r\n    }else{\r\n        if(prevResultData.Patientlists[0].gender === \"Male\"){\r\n            return (\r\n                <tr className=\"rform\">\r\n                <td >{test.Testslist.testname}</td>\r\n                <td>{test.result}</td>\r\n                <td>{test.Testslist.unit}</td>\r\n                <td>{test.Testslist.Referencevalue.Male}</td>\r\n            </tr>\r\n            )\r\n        }else{\r\n            return (\r\n                <tr className=\"rform\">\r\n                <td >{test.Testslist.testname}</td>\r\n                <td>{test.result}</td>\r\n                <td>{test.Testslist.unit}</td>\r\n                <td>{test.Testslist.Referencevalue.Female}</td>\r\n                </tr>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default PrevTr\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { useState } from 'react'\r\nimport Moment from 'moment'\r\nimport PrevTr from './PrevTr'\r\n\r\nfunction PrevResultModal({showPrevResModal, setShowPrevResModal, prevResultData}) {\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const resultPerPage = 1;\r\n    const pagesVisited = pageNumber * resultPerPage\r\n    const pageCount = Math.ceil(prevResultData.length / resultPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayPrevResults = prevResultData.slice(pagesVisited, pagesVisited + resultPerPage).map((order, index) => {\r\n        return (\r\n            <div className=\"checkin-modal-body\" key={index}>\r\n            <div className=\"order-dits\">\r\n                <strong>Patient Name:</strong> {order.Patientlists[0].lastname}, {order.Patientlists[0].firstname} {order.Patientlists[0].middlename}<br />\r\n                <strong>Lab Number:</strong> {order.labNumber}<br />\r\n                <strong className=\"red\">Release Date: {Moment(order.createdAt).format('MMMM DD, yyyy h:MM:ss a')}<br /></strong>\r\n            <br /></div>\r\n\r\n            <table className=\"tablelab\">\r\n                <tbody>\r\n                    <tr className=\"labheader\">\r\n                        <th>Test</th>\r\n                        <th>Result</th>\r\n                        <th>Unit</th>\r\n                        <th>Reference</th>\r\n                    </tr>\r\n\r\n                    {order.Sectionorders[0].Sectionresults.map((test, index) => {\r\n                    return(\r\n                        <PrevTr key={index} test={test} prevResultData={order} />\r\n                    )\r\n                })}\r\n\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            \r\n        )\r\n    })\r\n\r\n    const closePrevResModal = () => {\r\n        setShowPrevResModal(false);\r\n        console.log(prevResultData.length);\r\n    }\r\n\r\n    if(!showPrevResModal){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkin-modal\">\r\n        <div className=\"pres-modal-wrapper\"> \r\n            <div className=\"checkin-modal-header\">\r\n                <div><strong>Previous Result Module:</strong></div>\r\n                <div className=\"checkin-closebtn\" onClick={closePrevResModal}>X</div>\r\n            </div>\r\n                {displayPrevResults}\r\n            <div className=\"checkin-modal-footer\">\r\n            {pageCount > 1 &&\r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"pagination-bttns\"}\r\n                        previousLinkClassName={\"prevBttn\"}\r\n                        nextLinkClassName={\"nextbtn\"}\r\n                        disabledClassName={\"pgnte-disabled\"}\r\n                        activeClassName={\"pgninate-active\"}\r\n                    />\r\n            }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PrevResultModal\r\n","import React from 'react'\r\nimport './chemresult.css'\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react'\r\nimport ChemTest from './ChemTest'\r\nimport { useHistory } from 'react-router-dom';\r\nimport PrevResultModal from './PrevResultModal';\r\n\r\n    function ChemResultmodal ({setSectionData, showPrevResModal, setShowPrevResModal, setPrevResultData, prevResultData, setSectionResultArray,setResultFormData, show, closeModal, resultFormData, sectionResultArray} ) {\r\n    \r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [patholist, setPatho] = useState();\r\n    const [pathoSelected, setPathoSelected] = useState(\"invalid\");\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    useEffect(()=>{\r\n      if(prevResultData || prevResultData == null){\r\n        setIsLoading(false);\r\n        axios.post(`http://localhost:3001/auth/pathofetch`).then((response) => {\r\n            setPatho(response.data);\r\n        })\r\n      }\r\n\r\n    },[prevResultData])\r\n\r\n    const prevResClick = () => {\r\n        setShowPrevResModal(true);\r\n    }\r\n\r\n    const onRelease = async () => {\r\n        if(pathoSelected === \"invalid\"){\r\n            alert(\"Please select pathologist before releasing!\")\r\n        }else{\r\n            const sectOrderID = resultFormData[0].Sectionorders[0].id;\r\n\r\n        await axios.post(`http://localhost:3001/order/result/release/${sectOrderID}/RELEASED`, {pathologist: pathoSelected} ,\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in. Please log-in!\");\r\n                history.push('/login');\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n        // RE RENDER DATA\r\n        \r\n\r\n        await axios.get(`http://localhost:3001/order/resultform/${resultFormData[0].labNumber}/${resultFormData[0].Sectionorders[0].section}`).then((response) => {\r\n            setResultFormData(response.data);\r\n            setSectionResultArray(response.data[0].Sectionorders[0].Sectionresults);\r\n        })\r\n\r\n        //CHECK IF ALL TESTS COMPLETED\r\n        await axios.post(`http://localhost:3001/order/check/${resultFormData[0].labNumber}`).then((response) => {\r\n        })\r\n        }\r\n    }\r\n\r\n    const undoCheckIn = async () => {\r\n        await axios.post(`http://localhost:3001/order/updatesorder`, {\r\n            sectNumber: resultFormData[0].Sectionorders[0].sectNumber,\r\n            status: \"Sample Rejected - For Check-In\"\r\n        }, {\r\n            headers:{\r\n                    accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        })\r\n\r\n        //Rerender Data\r\n        axios.get(`http://localhost:3001/order/section/Chemistry`).then((response) => {\r\n            setSectionData(response.data);\r\n        })\r\n\r\n        closeModal();\r\n    }\r\n\r\n    const onUndoRelease = async () => {\r\n        setPathoSelected(\"invalid\")\r\n        const sectOrderID = resultFormData[0].Sectionorders[0].id\r\n\r\n        await axios.post(`http://localhost:3001/order/result/release/${sectOrderID}/RUNNING`, {pathologist: null},\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in. Please log-in!\");\r\n                history.push('/login');\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Record not updated\");\r\n        })\r\n\r\n        // RE RENDER DATA\r\n\r\n        await axios.get(`http://localhost:3001/order/resultform/${resultFormData[0].labNumber}/${resultFormData[0].Sectionorders[0].section}`).then((response) => {\r\n            setResultFormData(response.data);\r\n            setSectionResultArray(response.data[0].Sectionorders[0].Sectionresults);\r\n        })\r\n\r\n        //CHECK IF ALL TESTS COMPLETED\r\n        await axios.post(`http://localhost:3001/order/check/${resultFormData[0].labNumber}`).then((response) => {\r\n\r\n        })\r\n    }\r\n\r\n    const onSelectChange = (e) => {\r\n        setPathoSelected(e.target.value)\r\n    }\r\n\r\n    \r\n\r\n    if(!show){\r\n        return null\r\n    }\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <h3>Loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkin-modal\">\r\n            <div className=\"result-modal-wrapper\">\r\n                <div className=\"checkin-modal-header\">\r\n                    <div><strong>Result Entry for Lab Number: {resultFormData[0].labNumber}</strong></div>\r\n                    <div className=\"checkin-closebtn\" onClick={closeModal}>X</div>\r\n                </div>\r\n                    <div className=\"lab-modal-body\">\r\n                        {resultFormData[0].Sectionorders[0].status === \"RELEASED\" && <h2 className=\"red\">Released</h2>}\r\n                        <p className=\"order-dits\">\r\n                            <strong>Patient Name:</strong> {resultFormData[0].Patientlists[0].lastname}, {resultFormData[0].Patientlists[0].firstname} {resultFormData[0].Patientlists[0].middlename}<br />\r\n                            <strong>Section:</strong> {resultFormData[0].Sectionorders[0].section}<br />\r\n                            <strong>Section Number:</strong> {resultFormData[0].Sectionorders[0].sectNumber}<br />\r\n                            {prevResultData != null && resultFormData[0].Sectionorders[0].status === \"RUNNING\" && prevResultData.length > 0 && <input onClick={prevResClick} type=\"button\" value=\"Show previous result\" className=\"checkin-btn reject\" />}\r\n                        </p>  \r\n                            {/* Prev Result Modal */}\r\n                            {prevResultData != null &&\r\n                            <PrevResultModal showPrevResModal={showPrevResModal} setShowPrevResModal={setShowPrevResModal} prevResultData={prevResultData} />}\r\n\r\n\r\n                            <br />\r\n                            <table className=\"tablelab\">\r\n                                <tbody>\r\n                                    <tr className=\"labheader\">\r\n                                        <th>Test</th>\r\n                                        <th>Result</th>\r\n                                        <th>Unit</th>\r\n                                        <th>Reference</th>\r\n                                    </tr>\r\n                                    \r\n                                    {sectionResultArray.map((test, index) => {\r\n                                    return(\r\n                                    <ChemTest key={index} status={resultFormData[0].Sectionorders[0].status} ptdata={resultFormData[0].Patientlists[0]} test={test} />\r\n                                    )\r\n                                })}\r\n                                </tbody>\r\n                            </table>\r\n                    </div>\r\n                <div className=\"res-footer\">\r\n                    <label>Pathologist:</label>\r\n                                <br />\r\n                            {resultFormData[0].Sectionorders[0].status === \"RELEASED\" && \r\n                                <select  id=\"form-field\" disabled={true}>\r\n                                <option>{resultFormData[0].Sectionorders[0].pathologist}</option>\r\n                                </select>\r\n                            }\r\n                            {resultFormData[0].Sectionorders[0].status === \"RUNNING\" && \r\n                                <select  id=\"form-field\" onChange={onSelectChange}>\r\n                                <option value=\"invalid\">Select...</option>\r\n                                {patholist.map((patho, index) => {\r\n                                    \r\n                                    return(\r\n                                        <option key={index} value={patho.name}>{patho.name}</option>\r\n                                    )\r\n                                })}\r\n                                </select>\r\n                            }\r\n                            <br /><br />\r\n                            {resultFormData[0].Sectionorders[0].status === \"RUNNING\" && \r\n                                <input type=\"button\" onClick={onRelease} className=\"checkin-btn accept\" value=\"Release\"/>\r\n                            }\r\n                            {resultFormData[0].Sectionorders[0].status === \"RUNNING\" && \r\n                            <input type=\"button\" onClick={undoCheckIn} className=\"checkin-btn reject\" value=\"Undo Check-in/Reject sample\" />\r\n                            }\r\n                            {resultFormData[0].Sectionorders[0].status === \"RELEASED\" && <input type=\"button\" onClick={onUndoRelease} className=\"checkin-btn reject\" value=\"Undo Release\" />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChemResultmodal\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Header from '../../Header';\r\nimport LabNav from '../LabNav';\r\nimport ChemTr from './ChemTr';\r\nimport ChemResultmodal from './ChemResultmodal';\r\nimport ReactPaginate from 'react-paginate';\r\nimport NotLoggedInModal from '../../NotLoggedInModal';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useState, useEffect } from 'react'\r\nimport LabLoadingModal from '../../LabLoadingModal';\r\n\r\n\r\nfunction ChemForm() {\r\n\r\n    const [sectionData, setSectionData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [resultFormData, setResultFormData] = useState();\r\n    const [sectionResultArray, setSectionResultArray] = useState();\r\n    const [prevResultData, setPrevResultData] = useState();\r\n    const [showPrevResModal, setShowPrevResModal] = useState(false);\r\n\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        await axios.get(`http://localhost:3001/order/section/Chemistry/${data.labNumber}`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setShow(false);\r\n    }\r\n \r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/section/Chemistry`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[sectionResultArray])\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 15;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(sectionData.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayOrders = sectionData.slice(pagesVisited, pagesVisited + orderPerPage).map((details) => {\r\n        return (<ChemTr \r\n            details={details} \r\n            key={details.id}\r\n            setShow={setShow}\r\n            setResultFormData={setResultFormData}\r\n            setSectionResultArray={setSectionResultArray}\r\n            prevResultData={prevResultData}\r\n            setPrevResultData={setPrevResultData}     \r\n        />)\r\n    })\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <LabLoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <NotLoggedInModal />\r\n        <Header />\r\n        <LabNav />\r\n          <section>\r\n          <div className=\"ptregwrapper\">\r\n            <div className=\"labwrapper\">\r\n                <h1 className=\"labcontentheader\">&nbsp; Clinical Chemistry</h1>\r\n                \r\n                <div className=\"labdiv\">\r\n                    <div className=\"labdivcontent\">\r\n                        <div className=\"labdiv-flex-block\">\r\n\r\n                        <div className=\"form-content\">\r\n                            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                                <Form  className=\"margin-0\">\r\n                                    <label className = \"filter-label\">Filter:</label>\r\n                                    <Field \r\n                                            name=\"labNumber\"\r\n                                            id=\"form-field\"\r\n                                            type=\"text\"\r\n                                            placeholder = \"Enter lab no...\"\r\n                                    />\r\n                                    <button className=\"form-botton filter\" type=\"submit\">Search</button>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div>\r\n                            \r\n                        </div>\r\n\r\n                        <br /> \r\n                        <table className=\"tablelab\">\r\n                            <tbody>\r\n                                <tr className=\"labheader\">\r\n                                    <th>LabNumber</th>\r\n                                    <th>Client Name</th>\r\n                                    <th>Test/s</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                {displayOrders}\r\n                                {pageCount > 1 &&                     \r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"orders-pagination-bttns\"}\r\n                        previousLinkClassName={\"orders-prevBttn\"}\r\n                        nextLinkClassName={\"orders-nextbtn\"}\r\n                        disabledClassName={\"orders-pgnte-disabled\"}\r\n                        activeClassName={\"orders-pgninate-active\"}\r\n                    />}\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    <ChemResultmodal\r\n                        show={show}\r\n                        closeModal={closeModal}\r\n                        resultFormData={resultFormData}\r\n                        sectionResultArray={sectionResultArray}\r\n                        setSectionResultArray={setSectionResultArray}\r\n                        setResultFormData={setResultFormData}\r\n                        prevResultData={prevResultData}\r\n                        setPrevResultData={setPrevResultData}\r\n                        showPrevResModal = {showPrevResModal}\r\n                        setShowPrevResModal = {setShowPrevResModal}\r\n                        setSectionData={setSectionData}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n              \r\n         </div>\r\n         </section>\r\n          <footer>Laboratory Information System by Bregs</footer>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChemForm\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Header from '../../Header';\r\nimport LabNav from '../LabNav';\r\nimport ChemTr from '../chemistry/ChemTr';\r\nimport ChemResultmodal from '../chemistry/ChemResultmodal';\r\nimport ReactPaginate from 'react-paginate';\r\nimport NotLoggedInModal from '../../NotLoggedInModal';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useState, useEffect } from 'react'\r\nimport LabLoadingModal from '../../LabLoadingModal';\r\n\r\n\r\nfunction Hemaform() {\r\n\r\n    const [sectionData, setSectionData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [resultFormData, setResultFormData] = useState();\r\n    const [sectionResultArray, setSectionResultArray] = useState();\r\n    const [prevResultData, setPrevResultData] = useState();\r\n    const [showPrevResModal, setShowPrevResModal] = useState(false);\r\n\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        await axios.get(`http://localhost:3001/order/section/Hematology/${data.labNumber}`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setShow(false);\r\n    }\r\n \r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/section/Hematology`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[sectionResultArray])\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 15;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(sectionData.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayOrders = sectionData.slice(pagesVisited, pagesVisited + orderPerPage).map((details) => {\r\n        return (<ChemTr \r\n            details={details} \r\n            key={details.id}\r\n            setShow={setShow}\r\n            setResultFormData={setResultFormData}\r\n            setSectionResultArray={setSectionResultArray}\r\n            prevResultData={prevResultData}\r\n            setPrevResultData={setPrevResultData}     \r\n        />)\r\n    })\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <LabLoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <NotLoggedInModal />\r\n        <Header />\r\n        <LabNav />\r\n          <section>\r\n          <div className=\"ptregwrapper\">\r\n            <div className=\"labwrapper\">\r\n                <h1 className=\"labcontentheader-hema\">&nbsp; Hematology</h1>\r\n                \r\n                <div className=\"labdiv\">\r\n                    <div className=\"labdivcontent\">\r\n                        <div className=\"labdiv-flex-block\">\r\n\r\n                        <div className=\"form-content\">\r\n                            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                                <Form  className=\"margin-0\">\r\n                                    <label className = \"filter-label\">Filter:</label>\r\n                                    <Field \r\n                                            name=\"labNumber\"\r\n                                            id=\"form-field\"\r\n                                            type=\"text\"\r\n                                            placeholder = \"Enter lab no...\"\r\n                                    />\r\n                                    <button className=\"form-botton filter\" type=\"submit\">Search</button>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div>\r\n                            \r\n                        </div>\r\n\r\n                        <br /> \r\n                        <table className=\"tablelab\">\r\n                            <tbody>\r\n                                <tr className=\"labheader\">\r\n                                    <th>LabNumber</th>\r\n                                    <th>Client Name</th>\r\n                                    <th>Test/s</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                {displayOrders}\r\n                                {pageCount > 1 &&                     \r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"orders-pagination-bttns\"}\r\n                        previousLinkClassName={\"orders-prevBttn\"}\r\n                        nextLinkClassName={\"orders-nextbtn\"}\r\n                        disabledClassName={\"orders-pgnte-disabled\"}\r\n                        activeClassName={\"orders-pgninate-active\"}\r\n                    />}\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    <ChemResultmodal\r\n                        show={show}\r\n                        closeModal={closeModal}\r\n                        resultFormData={resultFormData}\r\n                        sectionResultArray={sectionResultArray}\r\n                        setSectionResultArray={setSectionResultArray}\r\n                        setResultFormData={setResultFormData}\r\n                        prevResultData={prevResultData}\r\n                        setPrevResultData={setPrevResultData}\r\n                        showPrevResModal = {showPrevResModal}\r\n                        setShowPrevResModal = {setShowPrevResModal}\r\n                        setSectionData={setSectionData}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n              \r\n         </div>\r\n         </section>\r\n          <footer>Laboratory Information System by Bregs</footer>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Hemaform\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory, } from 'react-router-dom';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport NotLoggedInModal from '../NotLoggedInModal';\r\n\r\nfunction Results() {\r\n    let history = useHistory();\r\n\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        await axios.get(`http://localhost:3001/order/getorder/${data.labNumber}`, {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.error){\r\n                alert(\"You are not logged in. Please log-in!\");\r\n                history.push('/login');\r\n            }\r\n            if(response.data.length > 0){\r\n                history.push(`/order/${response.data[0].labNumber}`);\r\n            }else{\r\n                alert(\"No orders found in that lab number!\")\r\n            }\r\n        })\r\n    }\r\n \r\n    return (\r\n            <div className=\"labwrapper\">\r\n                <NotLoggedInModal />\r\n                <h1 className=\"labcontentheader-results\">&nbsp; Results</h1>\r\n                \r\n                <div className=\"labdiv\">\r\n                    <div className=\"labdivcontent\">\r\n                        <div className=\"block\">\r\n                            <div>\r\n                                <h4>Enter Laboratory Number:</h4>\r\n                            </div>\r\n                            <div>\r\n                            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                                <Form className=\"margin-0\">\r\n                                <div className=\"form-content labdiv-flex-block\">\r\n                                    <Field \r\n                                        name=\"labNumber\"\r\n                                        autoComplete=\"off\"\r\n                                        id=\"form-field\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter lab no...\"\r\n                                        className=\"mr-10\"\r\n                                    />\r\n                                    <button className=\"form-content form-botton margin-0\" type=\"submit\">Submit</button>\r\n                                </div><ErrorMessage name=\"labNumber\" component=\"span\" /><br />\r\n                                    \r\n                                </Form>\r\n                            </Formik>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport Moment from 'moment'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction PrevTrxTr({detail}) {\r\n\r\n    let history = useHistory();\r\n\r\n    const onSelect = (e) => {\r\n        const labNo = e.target.id\r\n        history.push(`/order/${labNo}`)\r\n    }\r\n\r\n    return (\r\n        <tr className=\"tbcontent\">\r\n            <td onClick={onSelect} id={detail.labNumber}>{detail.labNumber}</td>\r\n            <td onClick={onSelect} id={detail.labNumber}>{Moment(detail.createdAt).format('MMMM DD, yyyy')}</td>\r\n            <td onClick={onSelect} id={detail.labNumber}>{detail.testsRequested}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PrevTrxTr\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom';\r\nimport '../../components/ptregistration/ptreg.css'\r\nimport './orderdetails.css'\r\nimport PrevTrxTr from './PrevTrxTr'\r\n\r\n\r\nfunction PrevTrx() {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [orderDetails, setOrderDetails] = useState([])\r\n    let { pId } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/trx/prev/${pId}`).then((response) => {\r\n            setOrderDetails(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[pId])\r\n\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"ptregwrapper\">\r\n            <h3>Loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"labwrapper-orderdeats\">\r\n        <h1 className=\"labcontentheader-orderdeats\">&nbsp;Prev Orders</h1>\r\n            <div className=\"labdiv\">\r\n                <div className=\"labdivcontent p-10\">\r\n                    <h4 className=\"center\">Showing Previous Transactions of</h4>\r\n                    </div>\r\n                    <div className=\"divblock p-10\">\r\n                    <strong>Name:</strong> <p className=\"orderdetail\">{orderDetails[0].lastname}, {orderDetails[0].firstname} {orderDetails[0].middlename}</p>\r\n                    </div>\r\n\r\n                    <div className=\"divblock p-10\">\r\n                    <strong>Age/Gender:</strong> <p className=\"orderdetail\">{orderDetails[0].age}/{orderDetails[0].gender}</p>\r\n                    </div><br />\r\n\r\n                <div className=\"divblock p-10\">\r\n                    <strong>Transaction/s:</strong>\r\n                </div>\r\n                <div className=\"divblock p-10\">\r\n                <table className=\"detailtable\">\r\n                    <tbody>\r\n                        <tr className=\"header\">\r\n                            <th>Laboratory Number</th>\r\n                            <th>Date</th>\r\n                            <th>Test/s</th>\r\n                        </tr>\r\n                        {orderDetails[0].Orders.map((detail, index) => {\r\n                            return (\r\n                                <PrevTrxTr detail={detail} key={index} />\r\n                                )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div className=\"divblock p-10\">\r\n                </div><br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrevTrx\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Header from '../../Header';\r\nimport LabNav from '../LabNav';\r\nimport ChemTr from '../chemistry/ChemTr';\r\nimport ChemResultmodal from '../chemistry/ChemResultmodal';\r\nimport ReactPaginate from 'react-paginate';\r\nimport NotLoggedInModal from '../../NotLoggedInModal';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useState, useEffect } from 'react'\r\nimport LabLoadingModal from '../../LabLoadingModal';\r\n\r\n\r\nfunction Cmform() {\r\n\r\n    const [sectionData, setSectionData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [resultFormData, setResultFormData] = useState();\r\n    const [sectionResultArray, setSectionResultArray] = useState();\r\n    const [prevResultData, setPrevResultData] = useState();\r\n    const [showPrevResModal, setShowPrevResModal] = useState(false);\r\n\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        await axios.get(`http://localhost:3001/order/section/CM/${data.labNumber}`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setShow(false);\r\n    }\r\n \r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/section/CM`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[sectionResultArray])\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 15;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(sectionData.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayOrders = sectionData.slice(pagesVisited, pagesVisited + orderPerPage).map((details) => {\r\n        return (<ChemTr \r\n            details={details} \r\n            key={details.id}\r\n            setShow={setShow}\r\n            setResultFormData={setResultFormData}\r\n            setSectionResultArray={setSectionResultArray}\r\n            prevResultData={prevResultData}\r\n            setPrevResultData={setPrevResultData}     \r\n        />)\r\n    })\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <LabLoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <NotLoggedInModal />\r\n        <Header />\r\n        <LabNav />\r\n          <section>\r\n          <div className=\"ptregwrapper\">\r\n            <div className=\"labwrapper\">\r\n                <h1 className=\"labcontentheader\">&nbsp; Clinical Microsopy</h1>\r\n                \r\n                <div className=\"labdiv\">\r\n                    <div className=\"labdivcontent\">\r\n                        <div className=\"labdiv-flex-block\">\r\n\r\n                        <div className=\"form-content\">\r\n                            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                                <Form  className=\"margin-0\">\r\n                                    <label className = \"filter-label\">Filter:</label>\r\n                                    <Field \r\n                                            name=\"labNumber\"\r\n                                            id=\"form-field\"\r\n                                            type=\"text\"\r\n                                            placeholder = \"Enter lab no...\"\r\n                                    />\r\n                                    <button className=\"form-botton filter\" type=\"submit\">Search</button>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div>\r\n                            \r\n                        </div>\r\n\r\n                        <br /> \r\n                        <table className=\"tablelab\">\r\n                            <tbody>\r\n                                <tr className=\"labheader\">\r\n                                    <th>LabNumber</th>\r\n                                    <th>Client Name</th>\r\n                                    <th>Test/s</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                {displayOrders}\r\n                                {pageCount > 1 &&                     \r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"orders-pagination-bttns\"}\r\n                        previousLinkClassName={\"orders-prevBttn\"}\r\n                        nextLinkClassName={\"orders-nextbtn\"}\r\n                        disabledClassName={\"orders-pgnte-disabled\"}\r\n                        activeClassName={\"orders-pgninate-active\"}\r\n                    />}\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    <ChemResultmodal\r\n                        show={show}\r\n                        closeModal={closeModal}\r\n                        resultFormData={resultFormData}\r\n                        sectionResultArray={sectionResultArray}\r\n                        setSectionResultArray={setSectionResultArray}\r\n                        setResultFormData={setResultFormData}\r\n                        prevResultData={prevResultData}\r\n                        setPrevResultData={setPrevResultData}\r\n                        showPrevResModal = {showPrevResModal}\r\n                        setShowPrevResModal = {setShowPrevResModal}\r\n                        setSectionData={setSectionData}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n              \r\n         </div>\r\n         </section>\r\n          <footer>Laboratory Information System by Bregs</footer>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Cmform\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Header from '../../Header';\r\nimport LabNav from '../LabNav';\r\nimport ChemTr from '../chemistry/ChemTr';\r\nimport ChemResultmodal from '../chemistry/ChemResultmodal';\r\nimport ReactPaginate from 'react-paginate';\r\nimport NotLoggedInModal from '../../NotLoggedInModal';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useState, useEffect } from 'react'\r\nimport LabLoadingModal from '../../LabLoadingModal';\r\n\r\n\r\nfunction Cmform() {\r\n\r\n    const [sectionData, setSectionData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [resultFormData, setResultFormData] = useState();\r\n    const [sectionResultArray, setSectionResultArray] = useState();\r\n    const [prevResultData, setPrevResultData] = useState();\r\n    const [showPrevResModal, setShowPrevResModal] = useState(false);\r\n\r\n    const initialValues = {\r\n        labNumber: \"\",\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        labNumber: Yup.string().required(\"This field is required!\"),\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        await axios.get(`http://localhost:3001/order/section/Serology/${data.labNumber}`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setShow(false);\r\n    }\r\n \r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/order/section/Serology`).then((response) => {\r\n            setSectionData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    },[sectionResultArray])\r\n\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const orderPerPage = 15;\r\n    const pagesVisited = pageNumber * orderPerPage\r\n    const pageCount = Math.ceil(sectionData.length / orderPerPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    const displayOrders = sectionData.slice(pagesVisited, pagesVisited + orderPerPage).map((details) => {\r\n        return (<ChemTr \r\n            details={details} \r\n            key={details.id}\r\n            setShow={setShow}\r\n            setResultFormData={setResultFormData}\r\n            setSectionResultArray={setSectionResultArray}\r\n            prevResultData={prevResultData}\r\n            setPrevResultData={setPrevResultData}     \r\n        />)\r\n    })\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"ptregwrapper\">\r\n                <LabLoadingModal />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <NotLoggedInModal />\r\n        <Header />\r\n        <LabNav />\r\n          <section>\r\n          <div className=\"ptregwrapper\">\r\n            <div className=\"labwrapper\">\r\n                <h1 className=\"labcontentheader-sero\">&nbsp; Serology</h1>\r\n                \r\n                <div className=\"labdiv\">\r\n                    <div className=\"labdivcontent\">\r\n                        <div className=\"labdiv-flex-block\">\r\n\r\n                        <div className=\"form-content\">\r\n                            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                                <Form  className=\"margin-0\">\r\n                                    <label className = \"filter-label\">Filter:</label>\r\n                                    <Field \r\n                                            name=\"labNumber\"\r\n                                            id=\"form-field\"\r\n                                            type=\"text\"\r\n                                            placeholder = \"Enter lab no...\"\r\n                                    />\r\n                                    <button className=\"form-botton filter\" type=\"submit\">Search</button>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div>\r\n                            \r\n                        </div>\r\n\r\n                        <br /> \r\n                        <table className=\"tablelab\">\r\n                            <tbody>\r\n                                <tr className=\"labheader\">\r\n                                    <th>LabNumber</th>\r\n                                    <th>Client Name</th>\r\n                                    <th>Test/s</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                {displayOrders}\r\n                                {pageCount > 1 &&                     \r\n                        <ReactPaginate\r\n                        previousLabel = {\"<\"}\r\n                        nextLabel = {\">\"}\r\n                        pageCount = {pageCount}\r\n                        onPageChange={changePage}\r\n                        containerClassName={\"orders-pagination-bttns\"}\r\n                        previousLinkClassName={\"orders-prevBttn\"}\r\n                        nextLinkClassName={\"orders-nextbtn\"}\r\n                        disabledClassName={\"orders-pgnte-disabled\"}\r\n                        activeClassName={\"orders-pgninate-active\"}\r\n                    />}\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    <ChemResultmodal\r\n                        show={show}\r\n                        closeModal={closeModal}\r\n                        resultFormData={resultFormData}\r\n                        sectionResultArray={sectionResultArray}\r\n                        setSectionResultArray={setSectionResultArray}\r\n                        setResultFormData={setResultFormData}\r\n                        prevResultData={prevResultData}\r\n                        setPrevResultData={setPrevResultData}\r\n                        showPrevResModal = {showPrevResModal}\r\n                        setShowPrevResModal = {setShowPrevResModal}\r\n                        setSectionData={setSectionData}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n              \r\n         </div>\r\n         </section>\r\n          <footer>Laboratory Information System by Bregs</footer>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Cmform\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom';\r\n\r\nimport Header from './components/Header';\r\nimport Ptreg from './components/ptregistration/Ptreg';\r\nimport Ptsearch from \"./components/ptsearch/Ptsearch\";\r\nimport Searchresult from './components/ptsearch/Searchresult';\r\nimport Noptrecord from './components/ptsearch/Noptrecord';\r\nimport Updatept from './components/updatept/Updatept';\r\nimport Addorder from './components/addorder/Addorder';\r\nimport UserLogin from './components/users/UserLogin';\r\nimport UserReg from './components/users/UserReg';\r\nimport Orders from './components/orders/Orders';\r\nimport OrderDetails from './components/orders/OrderDetails';\r\nimport LabClient from './components/laboratory/LabClient';\r\nimport ChemForm from './components/laboratory/chemistry/ChemForm';\r\nimport Hemaform from './components/laboratory/hema/Hemaform';\r\nimport Results from './components/results/Results'\r\nimport PrevTrx from './components/orders/PrevTrx'\r\n\r\nimport { AuthContext } from './helpers/AuthContext';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport ResultFormA4 from './components/results/ResultFormA4';\r\nimport Cmform from './components/laboratory/cm/CmForm';\r\nimport Seroform from './components/laboratory/sero/Seroform';\r\n\r\nconst App = () => {\r\n\r\n  const [authState, setAuthState] = useState({name: \"\", username: \"\", id: 0, status: false});\r\n  \r\n\r\nuseEffect(() => {\r\n  axios.get(\"http://localhost:3001/auth/auth\",{\r\n    headers:{\r\n      accessToken: localStorage.getItem(\"accessToken\"),\r\n    }\r\n  }).then((response) => {\r\n    if(response.data.error){\r\n      //setAuthState({...authState, status: false});\r\n      setAuthState(prevAuthState => {\r\n        return { ...prevAuthState, status: false}\r\n      })\r\n    }else{\r\n      setAuthState(() => {\r\n        return { name: response.data.name, username: response.data.username, id: response.data.id, status: true}\r\n      })\r\n      //setAuthState({name: response.data.name, username: response.data.username, id: response.data.id, status: true});\r\n    }\r\n})\r\n},[setAuthState])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{authState, setAuthState}}>\r\n      <Router>\r\n        <Switch>\r\n            <Route path=\"/laboratory\" exact component={LabClient} />\r\n            <Route path=\"/laboratory/chemistry\" exact component={ChemForm} />\r\n            <Route path=\"/laboratory/hematology\" exact component={Hemaform} />\r\n            <Route path=\"/laboratory/cm\" exact component={Cmform} />\r\n            <Route path=\"/laboratory/sero\" exact component={Seroform} />\r\n            <Route path=\"/login\" exact component={UserLogin} />\r\n            <Route path=\"/register\" exact component={UserReg} />\r\n            <div className=\"wrapper\">\r\n              <Header />\r\n              <nav>\r\n                <li>\r\n                    <ul><Link to=\"/ptsearch\">Patient Search</Link></ul>\r\n                    <ul><Link to=\"/registerpatient\">Patient Registration</Link></ul>\r\n                    <ul><Link to=\"/orders\">Orders</Link></ul>\r\n                    <ul><Link to=\"/laboratory\">Laboratory</Link></ul>\r\n                    <ul><Link to=\"/results\">Results</Link></ul>\r\n                </li>\r\n              </nav>\r\n              <section>\r\n                \r\n                <Route path=\"/\" exact component={Ptsearch} />\r\n                <Route path=\"/ptsearch\" component={Ptsearch} />\r\n                <Route path=\"/registerpatient\" component={Ptreg} />\r\n                <Route path=\"/searchresults/:param\" component={Searchresult}/>\r\n                <Route path=\"/noptfound\" component={Noptrecord}/>\r\n                <Route path=\"/updatept/:pId\" component={Updatept}/>\r\n                <Route path=\"/porders/:pId\" component={PrevTrx}/>\r\n                <Route path=\"/addorder/for:pId\" component={Addorder}/>\r\n                <Route path=\"/orders\" component={Orders}/>\r\n                <Route path=\"/order/:labNumber\" component={OrderDetails}/>\r\n                <Route path=\"/results/\" component={Results}/>\r\n                <Route path=\"/resultform/\" component={ResultFormA4}/>\r\n              </section>\r\n              <footer>Laboratory Information System by Bregs</footer>\r\n              \r\n            </div>\r\n          </Switch>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}